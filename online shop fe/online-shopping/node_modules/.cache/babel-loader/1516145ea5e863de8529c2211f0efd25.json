{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shivamc\\\\Downloads\\\\online-shop\\\\online shop fe\\\\online-shopping\\\\src\\\\userComponent\\\\UserLoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport bg from \"../images/bg_img.jpg\";\nimport \"./UserLoginForm.css\";\nimport { GoogleOAuthProvider } from \"@react-oauth/google\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserLoginForm = () => {\n  _s();\n\n  let navigate = useNavigate();\n  const [loginRequest, setLoginRequest] = useState({\n    emailId: \"\",\n    password: \"\",\n    role: \"Customer\"\n  });\n\n  const handleUserInput = e => {\n    setLoginRequest({ ...loginRequest,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const loginAction = e => {\n    fetch(\"http://localhost:8080/api/user/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(loginRequest)\n    }).then(result => {\n      console.log(\"result\", result);\n      result.json().then(res => {\n        console.log(res);\n\n        if (res && res.role === \"Admin\") {\n          console.log(\"Working fine:)\");\n          sessionStorage.setItem(\"active-admin\", JSON.stringify(res));\n        } else if (res && res.role === \"Customer\") {\n          sessionStorage.setItem(\"active-user\", JSON.stringify(res));\n        } else if (res && res.role === \"Delivery\") {\n          sessionStorage.setItem(\"active-delivery\", JSON.stringify(res));\n        } else {\n          // Handle the case when res is null or the role property is missing\n          toast.error(\"Invalid email and password\", {\n            position: \"top-center\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n          return;\n        }\n\n        toast.success(\"logged in successfully!!!\", {\n          position: \"top-center\",\n          autoClose: 1000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n        navigate(\"/home\");\n        window.location.reload(true);\n      }).catch(error => {\n        console.error(error); // Handle the error here, such as displaying an error message to the user\n\n        toast.error(\"Invalid email and password\", {\n          position: \"top-center\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      });\n    });\n    e.preventDefault();\n  };\n\n  const [user, setUser] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    emailId: \"\",\n    password: \"\",\n    phoneNo: \"\",\n    street: \"\",\n    city: \"\",\n    pincode: \"\",\n    role: \"\"\n  });\n\n  const addUser = async user => {\n    const res = await axios.post(\"http://localhost:8080/api/user/register\", user);\n    console.log(res.data);\n    return res.data;\n  };\n\n  const loginWithGoogle = details => {\n    user.firstName = details.given_name;\n    user.lastName = details.family_name;\n    user.emailId = details.email;\n    user.password = \"\";\n    user.role = \"Customer\";\n    setUser(user);\n    axios.get(\"http://localhost:8080/api/user/email/\" + user.emailId).then(res => {\n      if (res.data) {\n        sessionStorage.setItem(\"active-user\", JSON.stringify(res.data));\n        navigate(\"/home\");\n        window.location.reload(true);\n      } else {\n        addUser(user).then(res => {\n          sessionStorage.setItem(\"active-user\", JSON.stringify(res));\n          navigate(\"/home\");\n          window.location.reload(true);\n        }).catch(error => {\n          console.error(error); // Handle the error here, such as displaying an error message to the user\n\n          toast.error(\"Failed to log in via Google. Please try again.\", {\n            position: \"top-center\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-img\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertical-down container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 d-flex aligns-items-center justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            style: {\n              width: \"25rem\",\n              marginLeft: \"-52rem\",\n              marginTop: \"3.7rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                style: {\n                  marginLeft: \"7.6rem\",\n                  fontStyle: \"italic\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"User Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 91\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: loginAction,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-floating\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"email\",\n                      className: \"form-control\",\n                      id: \"emailId\",\n                      name: \"emailId\",\n                      placeholder: \"Email ID\",\n                      onChange: handleUserInput,\n                      value: loginRequest.emailId,\n                      required: true,\n                      style: {\n                        marginTop: \"1rem\",\n                        height: \"3rem\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"emailId\",\n                      children: \"Email ID *\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-floating\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"password\",\n                      className: \"form-control\",\n                      id: \"password\",\n                      name: \"password\",\n                      placeholder: \"Password\",\n                      onChange: handleUserInput,\n                      value: loginRequest.password,\n                      autoComplete: \"on\",\n                      required: true,\n                      style: {\n                        marginTop: \"0.5rem\",\n                        height: \"3rem\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"password\",\n                      children: \"Password *\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn bg-color custom-bg-text\" // onClick={loginAction}\n                    ,\n                    style: {\n                      marginTop: \"1.5rem\"\n                    },\n                    children: \"Login\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    style: {\n                      marginTop: \"1.5rem\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n                      clientId: \"668976964137-tljnqvmeh5jq54u9ldevost06cn878pl.apps.googleusercontent.com\",\n                      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n                        onSuccess: credentialResponse => {\n                          const details = jwt_decode(credentialResponse.credential);\n                          console.log(\"\", \"detail of user\", details); // console.log(credentialResponse);\n\n                          loginWithGoogle(details);\n                        },\n                        onError: () => {\n                          console.log(\"Login Failed\");\n                        },\n                        children: \"Login Via Google\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 213,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserLoginForm, \"ATBqfAESzMq6SFPTdea/HdfHlFc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UserLoginForm;\nexport default UserLoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserLoginForm\");","map":{"version":3,"names":["useState","ToastContainer","toast","Link","useNavigate","bg","GoogleOAuthProvider","GoogleLogin","jwt_decode","axios","UserLoginForm","navigate","loginRequest","setLoginRequest","emailId","password","role","handleUserInput","e","target","name","value","loginAction","fetch","method","headers","Accept","body","JSON","stringify","then","result","console","log","json","res","sessionStorage","setItem","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","success","window","location","reload","catch","preventDefault","user","setUser","firstName","lastName","phoneNo","street","city","pincode","addUser","post","data","loginWithGoogle","details","given_name","family_name","email","get","width","marginLeft","marginTop","fontStyle","height","credentialResponse","credential"],"sources":["C:/Users/shivamc/Downloads/online-shop/online shop fe/online-shopping/src/userComponent/UserLoginForm.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport bg from \"../images/bg_img.jpg\";\r\nimport \"./UserLoginForm.css\"\r\nimport { GoogleOAuthProvider } from \"@react-oauth/google\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\n\r\nconst UserLoginForm = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const [loginRequest, setLoginRequest] = useState({\r\n    emailId: \"\",\r\n    password: \"\",\r\n    role: \"Customer\",\r\n  });\r\n\r\n  const handleUserInput = (e) => {\r\n    setLoginRequest({ ...loginRequest, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const loginAction = (e) => {\r\n    fetch(\"http://localhost:8080/api/user/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(loginRequest),\r\n    }).then((result) => {\r\n      console.log(\"result\", result);\r\n      result\r\n        .json()\r\n        .then((res) => {\r\n          console.log(res);\r\n  \r\n          if (res && res.role === \"Admin\") {\r\n            console.log(\"Working fine:)\");\r\n            sessionStorage.setItem(\"active-admin\", JSON.stringify(res));\r\n          } else if (res && res.role === \"Customer\") {\r\n            sessionStorage.setItem(\"active-user\", JSON.stringify(res));\r\n          } else if (res && res.role === \"Delivery\") {\r\n            sessionStorage.setItem(\"active-delivery\", JSON.stringify(res));\r\n          } else {\r\n            // Handle the case when res is null or the role property is missing\r\n            toast.error(\"Invalid email and password\", {\r\n              position: \"top-center\",\r\n              autoClose: 2000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n            return;\r\n          }\r\n  \r\n          toast.success(\"logged in successfully!!!\", {\r\n            position: \"top-center\",\r\n            autoClose: 1000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n  \r\n          navigate(\"/home\");\r\n          window.location.reload(true);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n          // Handle the error here, such as displaying an error message to the user\r\n          toast.error(\"Invalid email and password\", {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n        });\r\n    });\r\n  \r\n    e.preventDefault();\r\n  };\r\n  \r\n\r\n  const [user, setUser] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    emailId: \"\",\r\n    password: \"\",\r\n    phoneNo: \"\",\r\n    street: \"\",\r\n    city: \"\",\r\n    pincode: \"\",\r\n    role: \"\",\r\n  });\r\n\r\n  const addUser = async (user) => {\r\n    const res = await axios.post(\r\n      \"http://localhost:8080/api/user/register\",\r\n      user\r\n    );\r\n    console.log(res.data);\r\n    return res.data;\r\n  };\r\n\r\n  const loginWithGoogle = (details) => {\r\n    user.firstName = details.given_name;\r\n    user.lastName = details.family_name;\r\n    user.emailId = details.email;\r\n    user.password = \"\";\r\n    user.role = \"Customer\";\r\n    setUser(user);\r\n\r\n    axios.get(\"http://localhost:8080/api/user/email/\" + user.emailId).then((res) => {\r\n      if (res.data) {\r\n        sessionStorage.setItem(\"active-user\", JSON.stringify(res.data));\r\n        navigate(\"/home\");\r\n        window.location.reload(true);\r\n      } else {\r\n        addUser(user)\r\n          .then((res) => {\r\n            sessionStorage.setItem(\"active-user\", JSON.stringify(res));\r\n            navigate(\"/home\");\r\n            window.location.reload(true);\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n            // Handle the error here, such as displaying an error message to the user\r\n            toast.error(\"Failed to log in via Google. Please try again.\", {\r\n              position: \"top-center\",\r\n              autoClose: 2000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className=\"login-img\">\r\n      <div className=\"vertical-down container\">\r\n        <div className=\"mt-2 d-flex aligns-items-center justify-content-center\">\r\n          <div\r\n            className=\"card\"\r\n            style={{ width: \"25rem\" ,marginLeft:\"-52rem\", marginTop:\"3.7rem\"}}\r\n          >\r\n            <div\r\n              className=\"card-header\"\r\n            >\r\n              <h4 className=\"card-title\" style={{marginLeft:\"7.6rem\",fontStyle:\"italic\"}}><b>User Login</b></h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={loginAction}>\r\n                <div className=\"mb-3\">\r\n                  <div className=\"form-floating\">\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      id=\"emailId\"\r\n                      name=\"emailId\"\r\n                      placeholder=\"Email ID\"\r\n                      onChange={handleUserInput}\r\n                      value={loginRequest.emailId}\r\n                      required\r\n                      style={{marginTop:\"1rem\",height:\"3rem\"}}\r\n                    />\r\n                    <label htmlFor=\"emailId\">Email ID *</label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <div className=\"form-floating\">\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      id=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Password\"\r\n                      onChange={handleUserInput}\r\n                      value={loginRequest.password}\r\n                      autoComplete=\"on\"\r\n                      required\r\n                      style={{marginTop:\"0.5rem\",height:\"3rem\"}}\r\n                    />\r\n                    <label htmlFor=\"password\">Password *</label>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn bg-color custom-bg-text\"\r\n                    // onClick={loginAction}\r\n                    style={{ marginTop: \"1.5rem\" }}\r\n                  >\r\n                    Login\r\n                  </button>\r\n                  <button\r\n                   style={{marginTop:\"1.5rem\"}}>\r\n                    <GoogleOAuthProvider clientId=\"668976964137-tljnqvmeh5jq54u9ldevost06cn878pl.apps.googleusercontent.com\">\r\n                      <GoogleLogin\r\n                        onSuccess={(credentialResponse) => {\r\n                          const details = jwt_decode(\r\n                            credentialResponse.credential\r\n                          );\r\n                          console.log(\"\", \"detail of user\", details);\r\n                          // console.log(credentialResponse);\r\n                          loginWithGoogle(details);\r\n                        }}\r\n                        onError={() => {\r\n                          console.log(\"Login Failed\");\r\n                        }}\r\n                       \r\n                      >\r\n                        Login Via Google\r\n                      </GoogleLogin>\r\n                    </GoogleOAuthProvider>\r\n                  </button>\r\n                </div>\r\n                <ToastContainer />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserLoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}