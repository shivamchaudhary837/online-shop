[{"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\index.js":"1","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\App.js":"2","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\ContactUs.js":"3","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\AboutUs.js":"4","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\Product.jsx":"5","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\Header.jsx":"6","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\HomePage.jsx":"7","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\AddCardDetails.jsx":"8","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\MyCart.jsx":"9","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\MyOrder.jsx":"10","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AllOrders.jsx":"11","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AdminLoginPage.jsx":"12","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\RegisterAdminForm.jsx":"13","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\SearchOrder.jsx":"14","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\DeliveryPersonLogin.jsx":"15","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AssignDeliveryToOrders.jsx":"16","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AddDeliveryPerson.jsx":"17","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\MyDeliveries.jsx":"18","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\MyProfile.jsx":"19","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\SuccessPage.jsx":"20","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\ProductDetail.jsx":"21","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\AddCategoryForm.jsx":"22","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\AddProductForm.jsx":"23","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\CategoryNavigator.jsx":"24","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\ProductCard.jsx":"25","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\GetAllCategories.jsx":"26","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\Carousel.jsx":"27","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\RoleNav.jsx":"28","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\AdminHeader.jsx":"29","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\HeaderUser.jsx":"30","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\NormalHeader.jsx":"31","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\DeliveryPersonHeader.jsx":"32","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\UserLoginForm.jsx":"33","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AddressModification.jsx":"34","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AddUserForm.js":"35","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\validation.js":"36","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\SearchBox.jsx":"37","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\AdminProductCart.jsx":"38","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\UpdateStock.jsx":"39","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\Modal.js":"40","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\Modall.jsx":"41"},{"size":310,"mtime":1687198796072,"results":"42","hashOfConfig":"43"},{"size":4140,"mtime":1687198795185,"results":"44","hashOfConfig":"43"},{"size":4156,"mtime":1687198796087,"results":"45","hashOfConfig":"43"},{"size":3936,"mtime":1687198796072,"results":"46","hashOfConfig":"43"},{"size":7329,"mtime":1687198796087,"results":"47","hashOfConfig":"43"},{"size":1731,"mtime":1687198796087,"results":"48","hashOfConfig":"43"},{"size":2546,"mtime":1687198796087,"results":"49","hashOfConfig":"43"},{"size":11816,"mtime":1687244818462,"results":"50","hashOfConfig":"43"},{"size":4720,"mtime":1687198796509,"results":"51","hashOfConfig":"43"},{"size":3908,"mtime":1687198796509,"results":"52","hashOfConfig":"43"},{"size":4551,"mtime":1687198796509,"results":"53","hashOfConfig":"43"},{"size":6267,"mtime":1687198796509,"results":"54","hashOfConfig":"43"},{"size":4961,"mtime":1687198796509,"results":"55","hashOfConfig":"43"},{"size":9257,"mtime":1687198796525,"results":"56","hashOfConfig":"43"},{"size":4987,"mtime":1687198796509,"results":"57","hashOfConfig":"43"},{"size":8390,"mtime":1687198796509,"results":"58","hashOfConfig":"43"},{"size":4980,"mtime":1687198796509,"results":"59","hashOfConfig":"43"},{"size":4935,"mtime":1687198796509,"results":"60","hashOfConfig":"43"},{"size":6701,"mtime":1687198796509,"results":"61","hashOfConfig":"43"},{"size":4785,"mtime":1687254219222,"results":"62","hashOfConfig":"43"},{"size":6793,"mtime":1687198796509,"results":"63","hashOfConfig":"43"},{"size":3030,"mtime":1687198796087,"results":"64","hashOfConfig":"43"},{"size":5947,"mtime":1687238237718,"results":"65","hashOfConfig":"43"},{"size":452,"mtime":1687198796509,"results":"66","hashOfConfig":"43"},{"size":1883,"mtime":1687198796509,"results":"67","hashOfConfig":"43"},{"size":1294,"mtime":1687198796509,"results":"68","hashOfConfig":"43"},{"size":2260,"mtime":1687198796072,"results":"69","hashOfConfig":"43"},{"size":699,"mtime":1687198796087,"results":"70","hashOfConfig":"43"},{"size":2528,"mtime":1687198796072,"results":"71","hashOfConfig":"43"},{"size":3688,"mtime":1687198796087,"results":"72","hashOfConfig":"43"},{"size":1017,"mtime":1687198796087,"results":"73","hashOfConfig":"43"},{"size":1759,"mtime":1687198796087,"results":"74","hashOfConfig":"43"},{"size":10843,"mtime":1687198796525,"results":"75","hashOfConfig":"43"},{"size":4965,"mtime":1687198796509,"results":"76","hashOfConfig":"43"},{"size":10401,"mtime":1687198796509,"results":"77","hashOfConfig":"43"},{"size":486,"mtime":1686936127315,"results":"78","hashOfConfig":"43"},{"size":3207,"mtime":1687198796087,"results":"79","hashOfConfig":"43"},{"size":1861,"mtime":1687198796509,"results":"80","hashOfConfig":"43"},{"size":4425,"mtime":1687198796509,"results":"81","hashOfConfig":"43"},{"size":4773,"mtime":1687252005974,"results":"82","hashOfConfig":"43"},{"size":4886,"mtime":1687198796087,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"uxswr5",{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"87"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"87"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"87"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"87"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"87"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"87"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"87"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"87"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"87"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"87"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"87"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"87"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"87"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"87"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"87"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"87"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"87"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"87"},"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\index.js",[],[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\App.js",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\ContactUs.js",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\AboutUs.js",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\Product.jsx",["226","227"],[],"import GetAllCategories from \"../productComponent/GetAllCategories\";\r\nimport CategoryNavigator from \"../productComponent/CategoryNavigator\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ProductCard from \"../productComponent/ProductCard\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nconst Product = () => {\r\n  const { productId, categoryId } = useParams();\r\n\r\n  let user = JSON.parse(sessionStorage.getItem(\"active-user\"));\r\n\r\n  const [quantity, setQuantity] = useState(\"\");\r\n\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const [product, setProduct] = useState({\r\n    id: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    quantity: \"\",\r\n    price: \"\",\r\n    imageName: \"\",\r\n    category: { id: \"\", title: \"\" },\r\n  });\r\n\r\n  const retrieveProduct = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:8080/api/product/id?productId=\" + productId\r\n    );\r\n\r\n    return response.data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getProduct = async () => {\r\n      const retrievedProduct = await retrieveProduct();\r\n\r\n      setProduct(retrievedProduct);\r\n    };\r\n\r\n    const getProductsByCategory = async () => {\r\n      const allProducts = await retrieveProductsByCategory();\r\n      if (allProducts) {\r\n        setProducts(allProducts);\r\n      }\r\n    };\r\n\r\n    getProduct();\r\n    getProductsByCategory();\r\n  }, [productId]);\r\n\r\n  const retrieveProductsByCategory = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:8080/api/product/category?categoryId=\" + categoryId\r\n    );\r\n    console.log(response.data);\r\n    return response.data;\r\n  };\r\n\r\n  const saveProductToCart = (userId) => {\r\n    fetch(\"http://localhost:8080/api/user/cart/add\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        quantity: quantity,\r\n        userId: userId,\r\n        productId: productId,\r\n      }),\r\n    }).then((result) => {\r\n      console.log(\"result\", result);\r\n      \r\n      if(result!=null ){\r\n      toast.success(\"Products added to Cart Successfully!!!\", {\r\n        position: \"top-center\",\r\n        autoClose: 1000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      }\r\n      else{\r\n        toast.success(\"Something went wrong\", {\r\n          position: \"top-center\",\r\n          autoClose: 1000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }\r\n      result.json().then((res) => {\r\n        console.log(\"response\", res);\r\n      });\r\n      getProductss();\r\n    });\r\n  };\r\n\r\n  const addToCart = (e) => {\r\n    \r\n    \r\n    let value1=parseInt(quantity);\r\n    let value2=parseInt(product.quantity)\r\n\r\n    if(value2 === 0){\r\n      toast.error(\"Out of Stock!!\", {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n       \r\n    }\r\n    else if(value1 <= 0 || value1 > value2){\r\n      \r\n\r\n      toast.error(\"Enter Quantity in range\", {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      \r\n    }\r\n    else if (user === null) {\r\n      alert(\"Please login to buy the products!!!\");\r\n      //e.preventDefault();\r\n    } else {\r\n      saveProductToCart(user.id);\r\n      setQuantity(\"\");\r\n      \r\n    }\r\n\r\n     e.preventDefault();\r\n  };\r\n\r\n  const getProductss = async () => {\r\n    const retrievedProduct = await retrieveProduct();\r\n    setProduct(retrievedProduct);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-2 mt-2\">\r\n          <GetAllCategories />\r\n        </div>\r\n        <div className=\"col-sm-3 mt-2 admin\">\r\n          <div className=\"card form-card border-color card-color\">\r\n            <img\r\n              src={\"http://localhost:8080/api/product/\" + product.imageName}\r\n              style={{\r\n                maxHeight: \"300px\",\r\n                maxWidth: \"100%\",\r\n                width: \"auto\",\r\n              }}\r\n              className=\"card-img-top rounded mx-auto d-block m-2\"\r\n              alt=\"img\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-7 mt-2\">\r\n          <div className=\"card form-card border-color card-color\">\r\n            <div className=\"card-header custom-bg\">\r\n              <div className=\"d-flex justify-content-between\">\r\n                <h1 className=\"text-color\">{product.title}</h1>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card-body text-left text-color\">\r\n              <div className=\"text-left mt-3\">\r\n                <h3>Description :</h3>\r\n              </div>\r\n              <h4 className=\"card-text\" style={{marginLeft:\"1rem\",marginTop:\"1rem\"}}>{product.description}</h4>\r\n            </div>\r\n\r\n            <div className=\"card-footer card-color\">\r\n              <div className=\"text-center text-color\" style={{marginLeft:\"43rem\"}}>\r\n                <p>\r\n                  <span>\r\n                    <h4>Price : &#8377;{product.price}</h4>\r\n                  </span>\r\n                </p>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between\">\r\n                <div>\r\n                  <form className=\"row g-3\" onSubmit={addToCart}>\r\n                    <div className=\"col-auto\" >\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        id=\"addToCart\"\r\n                        placeholder=\"Enter Quantity...\"\r\n                        onChange={(e) => setQuantity(e.target.value)}\r\n                        value={quantity}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-auto\" >\r\n                      <input\r\n                        type=\"submit\"\r\n                        className=\"btn bg-color custom-bg-text mb-3\"\r\n                        value=\"Add to Cart\"\r\n                      />\r\n                      <ToastContainer />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n\r\n                <p className=\"ml-2 text-color\" style={{marginRight:\"2rem\"}}>\r\n                  <b>Stock : {product.quantity}</b>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col-sm-2\"></div>\r\n\r\n        <div className=\"col-sm-10\">\r\n          <h2>Related Products:</h2>\r\n          <div className=\"row row-cols-1 row-cols-md-4 g-4\">\r\n              \r\n                {products.map((product) => {\r\n                  return <ProductCard item={product} />;\r\n                })}\r\n              </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\Header.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\HomePage.jsx",["228"],[],"import Carousel from \"./Carousel\";\r\nimport GetAllCategories from \"../productComponent/GetAllCategories\";\r\nimport ProductCard from \"../productComponent/ProductCard\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport AdminProductCard from \"../productComponent/AdminProductCart\";\r\n\r\nconst HomePage = () => {\r\n  const user = JSON.parse(sessionStorage.getItem(\"active-user\"));\r\n  const admin = JSON.parse(sessionStorage.getItem(\"active-admin\"));\r\n\r\n\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const { categoryId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const getAllProducts = async () => {\r\n      const allProducts = await retrieveAllProducts();\r\n      if (allProducts) {\r\n        setProducts(allProducts);\r\n      }\r\n    };\r\n\r\n    const getProductsByCategory = async () => {\r\n      const allProducts = await retrieveProductsByCategory();\r\n      if (allProducts) {\r\n        setProducts(allProducts);\r\n      }\r\n    };\r\n\r\n    if (categoryId == null) {\r\n      console.log(\"Category Id is null\");\r\n      getAllProducts();\r\n    } else {\r\n      console.log(\"Category Id is NOT null\");\r\n      getProductsByCategory();\r\n    }\r\n  }, [categoryId]);\r\n\r\n  const retrieveAllProducts = async () => {\r\n    const response = await axios.get(\"http://localhost:8080/api/product/all\");\r\n\r\n    return response.data;\r\n  };\r\n\r\n  const retrieveProductsByCategory = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:8080/api/product/category?categoryId=\" + categoryId\r\n    );\r\n\r\n    return response.data;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid mb-2\">\r\n      <Carousel />\r\n      <div className=\"mt-2 mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2\">\r\n            <GetAllCategories />\r\n          </div>\r\n          <div className=\"col-md-10\">\r\n            <div className=\"row row-cols-1 row-cols-md-4 g-4\">\r\n                \r\n                {admin!=null && products.map((product) => {\r\n                  return <AdminProductCard item={product} />;\r\n                  }) \r\n                }\r\n\r\n                {user!=null && products.map((product) => {\r\n                  return <ProductCard item={product} />;\r\n                })}\r\n                   \r\n                { products.map((product) => {\r\n                  return <ProductCard item={product} />;\r\n                })}\r\n\r\n              </div>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\AddCardDetails.jsx",["229","230","231","232","233","234","235","236","237","238","239"],[],"import { useState,useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport { icons } from 'react-icons'\r\nimport {FaEdit,FaWallet,FaMoneyBillWave, FaMoneyCheckAlt ,FaAwes} from 'react-icons/fa'\r\nimport { Link } from \"react-router-dom\";\r\nimport './addcard.css'\r\nimport Modal from \"./Modal\";\r\nimport Modall from \"./Modall\";\r\nimport carousel1 from \"../images/imagee.png\";\r\n\r\n\r\nconst AddCardDetails = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const user = JSON.parse(sessionStorage.getItem(\"active-user\"));\r\n  const priceToPay = location.state.priceToPay;\r\n\r\n  const [card, setCard] = useState({\r\n    cardName: \"\",\r\n    cardNumber: \"\",\r\n    validThrough: \"\",\r\n    cvv: \"\",\r\n  });\r\n\r\n  const handleCardInput = (e) => {\r\n    setCard({ ...card, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [orderStatus, setOrderStatus] = useState(null);\r\n\r\n  const payAndOrder = () => {\r\n    const requestData = {\r\n      userId: user.id,\r\n      priceToPay: priceToPay,\r\n      paymentType: paymentType,\r\n    };\r\n    fetch(\"http://localhost:8080/api/user/order\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(requestData),\r\n    }).then((result) => {\r\n      console.log(\"result\", result);\r\n      result.json().then((res) => {\r\n        console.log(res);\r\n\r\n        if (res === \"Order Failed\") {\r\n          setOrderStatus(\"failed\");\r\n        } else {\r\n          setOrderStatus(\"success\");\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const payForOrder = () => {\r\n    payAndOrder();\r\n    \r\n    toast.success(\"Products Ordered Sucessfully!!!\", {\r\n      position: \"top-center\",\r\n      autoClose: 1000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  \r\n    navigate(\"/user/order/payment/successpage\");\r\n    window.location.reload(true);\r\n  };\r\n\r\n  const [paymentType,setPaymentType] = useState(\"wallet\");\r\n\r\n  const [balance, setBalance] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Fetch user's balance\r\n    fetch(`http://localhost:8080/api/user/checkwalletbalance?userId=${user.id}`)\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        setBalance(parseInt(data));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [user.id]);\r\n\r\n  \r\n  \r\n\r\n  const [address, setAddress] = useState({\r\n    \r\n      street: \"\",\r\n      city: \"\",\r\n      pincode: \"\",\r\n    \r\n  });\r\n\r\n  useEffect(() => {\r\n    const getMyAddress = async () => {\r\n\r\n      const addressResult = await retrieveUser();\r\n\r\n      if (addressResult) {\r\n        console.log(\"my profile is present\");\r\n      }\r\n      setAddress(addressResult);\r\n    };\r\n    \r\n    getMyAddress();\r\n\r\n  }, []);\r\n\r\n \r\n  const retrieveUser = async () => {\r\n    const res = await axios.get(\r\n      \"http://localhost:8080/api/user/address/\" + user.id\r\n    );\r\n    console.log(res.data);\r\n    return res.data;\r\n  };\r\n  \r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [openModall , setOpenModall] = useState(false);\r\n\r\n  const checkBalance = () => {\r\n    // Show balance in a toast\r\n    toast.info(`Wallet Balance: $${balance}`, {\r\n      position: \"top-center\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  };\r\n\r\n  const [totatPrice, setTotalPrice] = useState(\"\");\r\n  const [myCartData, setMyCartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getMyCart = async () => {\r\n      const myCart = await retrieveMyyCart();\r\n      if (myCart) {\r\n        console.log(\"cart data is present :)\");\r\n        console.log(myCart.totalCartPrice);\r\n        console.log(myCart.cartData);\r\n        setTotalPrice(myCart.totalCartPrice);\r\n        setMyCartData(myCart.cartData);\r\n      }\r\n    };\r\n\r\n    getMyCart();\r\n  }, []);\r\n\r\n  const retrieveMyyCart = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:8080/api/user/mycart?userId=\" + user.id\r\n    );\r\n    console.log(response.data);\r\n    return response.data;\r\n  };\r\n\r\n   const [myOrderData,setMyOrderData]=useState([])\r\n  \r\n\r\n  const deleteProductFromCart = (cartId, e) => {\r\n    const response = axios.get(\r\n      \"http://localhost:8080/api/user/mycart/remove?cartId=\" + cartId\r\n    );\r\n\r\n    console.log(response);\r\n    window.location.reload(true);\r\n  };\r\n\r\n  const deliveryDate=()=>{\r\n\r\n    const currentDate = new Date();\r\n\r\n    // Add three days to the current date\r\n    const expectedDeliveryDate = new Date();\r\n    expectedDeliveryDate.setDate(currentDate.getDate() + 4);\r\n    \r\n    const options = { day: \"numeric\", month: \"short\" };\r\n    const formattedDeliveryDate = expectedDeliveryDate.toLocaleString(\"default\", options);\r\n    return formattedDeliveryDate;\r\n  }\r\n  return (\r\n    <>\r\n    <div className=\"pay_img\">\r\n\r\n      <div className=\"mt-2 pt-5 d-flex aligns-items-center justify-content-center\">\r\n\r\n      <div className=\"table-responsive\">\r\n            <table className=\"table table-hover bg-color-text text-center\" style={{width:\"80rem\",marginLeft:\"12rem\",marginTop:\"0rem\"}}>\r\n              <thead className=\"custom-bg table-bordered border-color\">\r\n                <tr style={{backgroundColor:\"#7fc6cf\",height:\"3rem\"}}>\r\n                  <th scope=\"col\">Product</th>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Quantity</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-color\">\r\n                {myCartData.map((cartData) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>\r\n                        <img\r\n                          src={\r\n                            \"http://localhost:8080/api/product/\" +\r\n                            cartData.productImage\r\n                          }\r\n                          class=\"img-fluid\"\r\n                          alt=\"product_pic\"\r\n                          style={{\r\n                            maxWidth: \"90px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <b>{cartData.productName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{cartData.productDescription}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{cartData.quantity}</b>\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn bg-color custom-bg-text btn-sm\"\r\n                          onClick={() => deleteProductFromCart(cartData.cartId)}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                    \r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        \r\n        <div  >\r\n            <h5  style={{marginLeft:\"80rem\"}}><b>Expected Delivery Date:</b> {deliveryDate()}</h5>\r\n        </div>\r\n\r\n        <div>\r\n           <img src={carousel1} alt=\"\" \r\n           style={{marginLeft:\"70rem\",marginTop:\"3rem\",width:\"25rem\",height:\"25rem\"}}/>\r\n        </div>\r\n    \r\n        <div \r\n        className=\"card\"\r\n        style={{ width: \"40rem\" , marginTop: \"-25rem\",marginLeft:\"19rem\",boxShadow: \"0 13px 15px rgba(128, 20, 20, 0.13)\"}}>\r\n    \r\n          {/* <div className=\"card-header custom-bg text-color\">\r\n            <h5 className=\"card-title text-center\">Payment Details</h5>\r\n          </div> */}\r\n          \r\n            <div className=\"card-body text-color card-color\">\r\n\r\n          <div className=\"form-check\">\r\n            <h6 style={{fontStyle:\"italic\",marginLeft:\"11rem\",fontSize:\"1.4rem\"}}>Drop-Off Address</h6>\r\n          \r\n            <div className=\"address\" style={{border:\"1px solid black\",width:\"28rem\",marginTop:\"2.4rem\",height:\"6rem\"}}>\r\n            <input\r\n            type=\"radio\"\r\n            style={{marginTop:\"2rem\",marginLeft:\"1rem\",width:\"0.9rem\"}}></input>\r\n            <h6 style={{marginLeft:\"2.3rem\",marginTop:\"-1.6rem\"}}>{address.street} ,{address.city}</h6>\r\n            {/* <h5></h5> */}\r\n            <h6 style={{marginLeft:\"2.3rem\"}}>{address.pincode}</h6>\r\n          </div>\r\n         \r\n           \r\n      <div>\r\n         <FaEdit className=\"icons edit\" style={{width:\"2.8rem\",height:\"2.8rem\",marginLeft:\"32.4rem\",marginTop:\"-8.1rem\", color:\"rgba(16, 65, 50, 0.87)\"}}\r\n      onClick={() => {\r\n        setOpenModall(true);\r\n      }}\r\n      />\r\n      </div>\r\n    </div>   \r\n\r\n    <div className=\"mb-3\" style={{marginTop:\"2rem\"}}>\r\n  <label htmlFor=\"paymentType\" className=\"form-label\" style={{marginLeft:\"13.7rem\"}}>\r\n    <h6 style={{fontSize:\"1.3rem\",fontStyle:\"italic\"}}>Payment Type</h6>\r\n  </label>\r\n  <div>\r\n    <div className=\"form-check\" style={{marginLeft:\"2.5rem\",marginTop:\"-0.5rem\"}}>\r\n      <input\r\n        className=\"form-check-input\"\r\n        type=\"radio\"\r\n        name=\"paymentType\"\r\n        id=\"cod\"\r\n        value=\"cod\"\r\n        checked={paymentType === \"cod\"}\r\n        onChange={(e) => setPaymentType(e.target.value)}\r\n        \r\n      />\r\n      \r\n      <label className=\"form-check-label\" htmlFor=\"cod\" style={{}}>\r\n        Cash on Delivery\r\n      </label>\r\n      <FaMoneyBillWave style={{width:\"2rem\",marginLeft:1}} />\r\n    </div>\r\n    <div className=\"form-check\" style={{marginLeft:\"2.5rem\",marginTop:\"0rem\"}}>\r\n      <input\r\n        className=\"form-check-input\"\r\n        type=\"radio\"\r\n        name=\"paymentType\"\r\n        id=\"wallet\"\r\n        value=\"wallet\"\r\n        checked={paymentType === \"wallet\"}\r\n        onChange={(e) => setPaymentType(e.target.value)}\r\n      />\r\n      \r\n      <label className=\"form-check-label\" htmlFor=\"wallet\">\r\n        Wallet Pay\r\n      </label>\r\n      <FaWallet style={{width:\"2rem\",marginLeft:1}}/>\r\n    </div>\r\n    \r\n    \r\n    \r\n  </div>\r\n</div>\r\n<div className=\"xyz\" style={{display: \"flex\"}}>  \r\n            \r\n               <input \r\n                type=\"submit\"\r\n                class=\"btn custom-bg-text bg-color\"\r\n                value={paymentType ===\"wallet\" ? \"Pay \" : \"Proceed\"}\r\n                onClick={() => {\r\n                  setOpenModal(true);\r\n                }}\r\n                style={{ marginTop:\"2.7rem\",marginLeft:\"29.3rem\",width:\"7rem\"}}\r\n              />\r\n               <ToastContainer />\r\n            \r\n            \r\n            {paymentType === \"wallet\" && (\r\n            <div className=\"mb-3\"\r\n              style={{display:\"inline-block\"}}\r\n              >    \r\n              \r\n               <button className=\"btn \" style={{marginTop:\"-6rem\",border:\"none\",marginLeft:\"-3.3rem\",fontSize:\"2.5rem\"}}\r\n                 onClick={checkBalance}>\r\n              <FaMoneyCheckAlt style={{ color:\"rgba(16, 65, 50, 0.87)\"}}/>\r\n              </button>\r\n            </div>\r\n            )}\r\n\r\n<div className=\"totalamount\">\r\n  <hr className=\"l1\" style={{width:\"550px\",marginLeft:\"-35rem\"}}/>\r\n<h5 style={{marginLeft:\"-34.7rem\",marginTop:\"1.9rem\"}}>Total Amount :  &#8377;{priceToPay}/-</h5>\r\n</div>\r\n\r\n            </div>\r\n          </div>\r\n          {openModal && <Modal closeModal={setOpenModal} />}\r\n          {/* {openModal && <Modaladdress closeModall={setOpenModal} />} */}\r\n          {openModall &&  <Modall closeModall={setOpenModall} />}\r\n        </div>\r\n      </div>\r\n\r\n      \r\n     \r\n  </>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default AddCardDetails;","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\MyCart.jsx",["240"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst MyCart = () => {\r\n  let navigate = useNavigate();\r\n  const user = JSON.parse(sessionStorage.getItem(\"active-user\"));\r\n  const [totatPrice, setTotalPrice] = useState(\"\");\r\n  \r\n  const [myCartData, setMyCartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getMyCart = async () => {\r\n      const myCart = await retrieveMyCart();\r\n      if (myCart) {\r\n        console.log(\"cart data is present :)\");\r\n        console.log(myCart.totalCartPrice);\r\n        console.log(myCart.cartData);\r\n        setTotalPrice(myCart.totalCartPrice);\r\n        setMyCartData(myCart.cartData);\r\n      }\r\n    };\r\n\r\n    getMyCart();\r\n  }, []);\r\n\r\n  const retrieveMyCart = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:8080/api/user/mycart?userId=\" + user.id\r\n    );\r\n    console.log(response.data);\r\n    return response.data;\r\n  };\r\n\r\n  const deleteProductFromCart = (cartId, e) => {\r\n    const response = axios.get(\r\n      \"http://localhost:8080/api/user/mycart/remove?cartId=\" + cartId\r\n    );\r\n\r\n    console.log(response);\r\n    window.location.reload(true);\r\n  };\r\n\r\n  const checkout = (e) => {\r\n    if (myCartData.length === 0) {\r\n      console.log(\"Add products to cart\");\r\n      alert(\"Add products to cart\")\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    console.log(\"CHECKOUT PAGE REQUEST\");\r\n    navigate(\"/user/order/payment\", { state: { priceToPay: totatPrice } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      <div\r\n        className=\"card form-card ms-2 me-2 mb-5 card-color border-color\"\r\n        style={{\r\n          height: \"45rem\",\r\n        }}\r\n      >\r\n        <div className=\"card-header text-center card-color custom-bg-text\">\r\n          <h2 style={{color:\"black\"}}>My Cart</h2>\r\n        </div>\r\n        <div\r\n          className=\"card-body\"\r\n          style={{\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover bg-color-text text-center\">\r\n              <thead className=\"custom-bg table-bordered border-color\">\r\n                <tr>\r\n                  <th scope=\"col\">Product</th>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Quantity</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-color\">\r\n                {myCartData.map((cartData) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>\r\n                        <img\r\n                          src={\r\n                            \"http://localhost:8080/api/product/\" +\r\n                            cartData.productImage\r\n                          }\r\n                          class=\"img-fluid\"\r\n                          alt=\"product_pic\"\r\n                          style={{\r\n                            maxWidth: \"90px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <b>{cartData.productName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{cartData.productDescription}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{cartData.quantity}</b>\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn bg-color custom-bg-text btn-sm\"\r\n                          onClick={() => deleteProductFromCart(cartData.cartId)}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-footer card-color\">\r\n          <div className=\"float-right\">\r\n            <div\r\n              className=\"text-color me-2\"\r\n              style={{\r\n                textAlign: \"right\",\r\n              }}\r\n            >\r\n              <h5>Total Price: &#8377; {totatPrice}/-</h5>\r\n            </div>\r\n\r\n            <div className=\"float-end me-2\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn bg-color custom-bg-text mb-3\"\r\n                onClick={checkout}\r\n              >\r\n                Checkout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyCart;\r\n","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\MyOrder.jsx",["241"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nconst MyOrder = () => {\r\n  const user = JSON.parse(sessionStorage.getItem(\"active-user\"));\r\n  \r\n  const [myOrderData, setMyOrderData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getMyOrder = async () => {\r\n      const myOrder = await retrieveMyOrder();\r\n      if (myOrder) {\r\n        console.log(\"my order data is present :)\");\r\n\r\n        setMyOrderData(myOrder);\r\n      }\r\n    };\r\n\r\n    getMyOrder();\r\n  }, []);\r\n\r\n  const retrieveMyOrder = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:8080/api/user/myorder?userId=\" + user.id\r\n    );\r\n    console.log(response.data);\r\n    return response.data;\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      <div\r\n        className=\"card form-card ms-2 me-2 mb-5 card-color\"\r\n        style={{\r\n          height: \"45rem\",\r\n        }}\r\n      >\r\n        <div className=\"card-header text-center card-color bg-color-text\">\r\n          <h2>My Orders</h2>\r\n        </div>\r\n        <div\r\n          className=\"card-body\"\r\n          style={{\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover bg-color-text text-center\">\r\n              <thead className=\"custom-bg table-bordered border-color\">\r\n                <tr>\r\n                  <th scope=\"col\">Order Id</th>\r\n                  <th scope=\"col\">Product</th>\r\n                  <th scope=\"col\">Name</th>\r\n                 \r\n                  <th scope=\"col\">Quantity</th>\r\n                  <th scope=\"col\">Total Price</th>\r\n                  <th scope=\"col\">Order Date</th>\r\n                  <th scope=\"col\">Delivery Date</th>\r\n                  <th scope=\"col\">Delivery Status</th>\r\n                  <th scope=\"col\">Delivery Person</th>\r\n                  <th scope=\"col\">Delivery Mobile No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-color\">\r\n                {myOrderData.map((orderData) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>\r\n                        <b>{orderData.orderId}</b>\r\n                      </td>\r\n                      <td>\r\n                        <img\r\n                          src={\r\n                            \"http://localhost:8080/api/product/\" +\r\n                            orderData.productImage\r\n                          }\r\n                          class=\"img-fluid\"\r\n                          alt=\"product_pic\"\r\n                          style={{\r\n                            maxWidth: \"90px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.productName}</b>\r\n                      </td>\r\n                      \r\n                      <td>\r\n                        <b>{orderData.quantity}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.totalPrice}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.orderDate.split(\" \")[0]}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryStatus}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonContact}</b>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyOrder;\r\n","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AllOrders.jsx",["242"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AssignDeliveryToOrders from \"./AssignDeliveryToOrders\";\r\n\r\nconst AllOrders = () => {\r\n  const [allOrderData, setAllOrderData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getAllOrder = async () => {\r\n      const allOrder = await retrieveAllOrder();\r\n      if (allOrder) {\r\n        setAllOrderData(allOrder);\r\n      }\r\n    };\r\n\r\n    getAllOrder();\r\n  }, []);\r\n\r\n  const retrieveAllOrder = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:8080/api/user/admin/allorder\"\r\n    );\r\n    console.log(response.data);\r\n    return response.data;\r\n  };\r\n\r\n  // const handleRow= ()=>{\r\n  //   window.location.href=\"/user/admin/assigndelivery\"\r\n  // }\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      <div\r\n        className=\"card form-card ms-2 me-2 mb-5 card-color border-color \"\r\n        style={{\r\n          height: \"45rem\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"card-body\"\r\n          style={{\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          <div className=\"table-responsive\"  >\r\n            <table className=\"table table-hover text-color text-center\">\r\n              <thead className=\"table-bordered border-color custom-bg text-color\">\r\n                <tr>\r\n                  <th scope=\"col\">Order Id</th>\r\n                  <th scope=\"col\">Product</th>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Quantity</th>\r\n                  <th scope=\"col\">Total Price</th>\r\n                  <th scope=\"col\">Customer Name</th>\r\n                  <th scope=\"col\">Street</th>\r\n                  <th scope=\"col\">City</th>\r\n                  <th scope=\"col\">Pin code</th>\r\n                  <th scope=\"col\">Mobile No.</th>\r\n                  <th scope=\"col\">Order Date</th>\r\n                  <th scope=\"col\">Delivery Date</th>\r\n                  <th scope=\"col\">Delivery Status</th>\r\n                  <th scope=\"col\">Delivery Person</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody  >\r\n                {allOrderData.map((orderData) => (\r\n                  \r\n                    <tr >\r\n                      <td>\r\n                        <b>{orderData.orderId}</b>\r\n                      </td>\r\n\r\n                      <td>\r\n                       \r\n                      <Link  to={`/user/admin/assigndelivery/${orderData.orderId}`} >\r\n                       \r\n                        <img\r\n                          src={`http://localhost:8080/api/product/${orderData.productImage}`}\r\n                          className=\"img-fluid\"\r\n                          alt=\"product_pic\"\r\n                          style={{\r\n                            maxWidth: \"90px\",\r\n                          }}\r\n                        />\r\n                        </Link>\r\n                        \r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.productName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.quantity}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.totalPrice}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.userName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.address.street}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.address.city}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.address.pincode}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.userPhone}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.orderDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryStatus}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonName}</b>\r\n                      </td>\r\n                    </tr>\r\n                  \r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllOrders;\r\n","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AdminLoginPage.jsx",["243","244"],[],"import { useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./adminlogin.css\";\r\nimport carousel1 from \"../images/image.png\";\r\n\r\n\r\nconst AdminLoginPage = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const [loginRequest, setLoginRequest] = useState({\r\n    emailId: \"\",\r\n    password: \"\",\r\n    role: \"Admin\",\r\n  });\r\n\r\n  const [response, setResponse] = useState({});\r\n\r\n  const handleUserInput = (e) => {\r\n    setLoginRequest({ ...loginRequest, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const loginAction = (e) => {\r\n    fetch(\"http://localhost:8080/api/user/admin/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(loginRequest),\r\n    })\r\n      .then((result) => {\r\n        console.log(\"RESULT\", result);\r\n        result\r\n          .json()\r\n          .then((res) => {\r\n            if (res && res.role === \"Admin\") {\r\n              sessionStorage.setItem(\"active-admin\", JSON.stringify(res));\r\n              console.log(\"Working fine:)\");\r\n\r\n              toast.success(\"logged in successfully!!!\", {\r\n                position: \"top-center\",\r\n                autoClose: 1000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n              });\r\n\r\n              navigate(\"/home\");\r\n              window.location.reload(true);\r\n            } else {\r\n              toast.error(\"Wrong Email Id or Password, Try Again\", {\r\n                position: \"top-center\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n            // Handle the error here, such as displaying an error message to the user\r\n            toast.error(\"Wrong Email Id or Password, Try Again\", {\r\n              position: \"top-center\",\r\n              autoClose: 2000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        // Handle the error here, such as displaying an error message to the user\r\n        toast.error(\"Wrong Email Id or Password, Try Again\", {\r\n          position: \"top-center\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      });\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  const validateForm = (event) => {\r\n    const form = document.getElementById(\"loginForm\");\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    form.classList.add(\"was-validated\");\r\n  };\r\n\r\n  return (\r\n    // <div className=\"admin-img\">\r\n      <div className=\"mt-2 d-flex aligns-items-center justify-content-center\">\r\n        <div\r\n          className=\"card\"\r\n          style={{ width: \"68rem\" ,marginLeft:\"2rem\", marginTop:\"4.7rem\",height:\"30rem\",boxShadow: \"0 13px 15px rgba(128, 20, 20, 0.13) \",backgroundColor:\"white\"}}\r\n        > \r\n          \r\n\r\n          <img src={carousel1} alt=\"\" style={{width:\"24rem\",height:\"21rem\",marginTop:\"5rem\",marginLeft:\"6rem\"}}/>\r\n          <div className=\"text\">\r\n\r\n<h3 className=\"villa\" style={{marginLeft:\"12.7rem\",marginTop:\"-6.8rem\",fontStyle:\"italic\"}}> Villa</h3>\r\n<h3 className=\"villa\" style={{marginLeft:\"15.4rem\",marginTop:\"-0.8rem\" ,fontStyle:\"italic\"}}>Namkeen....</h3>\r\n<h1 className=\"k\" style={{ marginLeft: \"44rem\", fontStyle: \"italic\", marginTop:\"-20rem\"}}>\r\n   Admin Login\r\n </h1>            \r\n</div>\r\n\r\n          <div className=\"card-body\">\r\n            <form id=\"loginForm\" onSubmit={loginAction} noValidate  style={{marginLeft:\"39rem\",marginTop:\"-16.3rem\"}}>\r\n              <div className=\"mb-3\">\r\n                <div className=\"form-floating\" >\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    id=\"emailId\"\r\n                    name=\"emailId\"\r\n                    placeholder=\"Email Id\"\r\n                    onChange={handleUserInput}\r\n                    required\r\n                    style={{ height: \"3rem\" ,maxWidth:\"20rem\",borderRadius: \"5px 10px 0 15px\"}}\r\n                  />\r\n                  <label htmlFor=\"emailId\">Email Id *</label>\r\n                  <div className=\"invalid-feedback\">Please enter a valid email address.</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <div className=\"form-floating\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={handleUserInput}\r\n                    autoComplete=\"on\"\r\n                    required\r\n                    style={{ height: \"3rem\", marginTop: \"1rem\" ,maxWidth:\"20rem\",borderRadius: \"5px 10px 0 15px\"}}\r\n                  />\r\n                  <label htmlFor=\"password\">Password *</label>\r\n                  <div className=\"invalid-feedback\">Please enter a password.</div>\r\n                </div>\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn bg-color custom-bg-text\"\r\n                onClick={validateForm}\r\n                style={{ marginLeft: \"6.3rem\", marginTop: \"1.4rem\",borderRadius: \"5px 10px 0 15px\",width:\"8rem\" }}\r\n              >\r\n                Login\r\n              </button>\r\n              <ToastContainer />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default AdminLoginPage;","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\RegisterAdminForm.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\SearchOrder.jsx",["245","246","247"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst SearchOrder = () => {\r\n  let pathOrderId=useParams()\r\n\r\n  const [allOrderData, setAllOrderData] = useState([]);\r\n  const [orderId, setOrderId] = useState(\"\");\r\n\r\n  const deliveryStatus = [\"Delivered\", \"On the Way\", \"Processing\"];\r\n  const deliveryTime = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  const [orderDeliveryStatus, setOrderDeliveryStatus] = useState({\r\n    orderId: \"\",\r\n    deliveryStatus: \"\",\r\n    deliveryTime: \"\",\r\n    deliveryDate: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Update the assignDelivery state with the orderId\r\n    setOrderDeliveryStatus((prevState) => ({\r\n      ...prevState,\r\n      orderId: pathOrderId.orderId.toString(), // Convert orderId to a string if necessary\r\n    }));\r\n\r\n  }, []);\r\n\r\n  const handleOrderDelivery = (e) => {\r\n    setOrderDeliveryStatus({\r\n      ...orderDeliveryStatus,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  useEffect(()=>{\r\n\r\n     getAllOrder()\r\n  })\r\n  const getAllOrder = async () => {\r\n    const allOrder = await retrieveAllOrder();\r\n    if (allOrder) {\r\n      setAllOrderData(allOrder);\r\n    }\r\n  };\r\n\r\n\r\n  const retrieveAllOrder = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:8080/api/user/admin/showorder?orderId=\" + pathOrderId.orderId.toString()\r\n    );\r\n    console.log(response.data);\r\n    return response.data;\r\n  };\r\n\r\n  const searchOrderById = (e) => {\r\n    getAllOrder();\r\n    setOrderId(\"\");\r\n    e.preventDefault();\r\n  };\r\n\r\n  const updateDeliveryStatus = (e) => {\r\n    console.log(\"CLICKED DELIVERY STATUS UPDATED\");\r\n    fetch(\"http://localhost:8080/api/user/admin/order/deliveryStatus/update\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(orderDeliveryStatus),\r\n    }).then((result) => {\r\n      console.log(\"result\", result);\r\n      result.json().then((res) => {\r\n        console.log(\"response\", res);\r\n        setAllOrderData({\r\n          orderId: \"\",\r\n          deliveryStatus: \"\",\r\n          deliveryTime: \"\",\r\n          deliveryDate: \"\",\r\n        });\r\n\r\n        setAllOrderData(res);\r\n      });\r\n    });\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n         <div  >\r\n        <div className=\"card form-card ms-2 me-2 mb-2 card-color\" style={{marginTop:\"40px\"}}>\r\n          \r\n          <div className=\"card-body\" >\r\n            <form class=\"row g-3\">\r\n              <div class=\"col-auto\">\r\n                <label className=\"text-color\">\r\n                  <b>Order Id</b>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"inputPassword2\"\r\n                  placeholder=\"Enter Order Id...\"\r\n                  name=\"orderId\"\r\n                  onChange={handleOrderDelivery}\r\n                  value={orderDeliveryStatus.orderId}\r\n                />\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <label className=\"text-color\">\r\n                  <b>Select Delivery Date</b>\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  class=\"form-control\"\r\n                  id=\"inputPassword2\"\r\n                  name=\"deliveryDate\"\r\n                  placeholder=\"dd-mm-yyyy\"\r\n                  min=\"1997-01-01\"\r\n                  max=\"2030-12-31\"\r\n                  value={handleOrderDelivery.deliveryDate}\r\n                  onChange={handleOrderDelivery}\r\n                />\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <label className=\"text-color\">\r\n                  <b>Delivery Time</b>\r\n                </label>\r\n\r\n                <select\r\n                  name=\"deliveryTime\"\r\n                  value={handleOrderDelivery.deliveryTime}\r\n                  onChange={handleOrderDelivery}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"\">Select Delivery Time</option>\r\n\r\n                  {deliveryTime.map((time) => {\r\n                    return <option value={time}> {time} </option>;\r\n                  })}\r\n                </select>\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <label className=\"text-color\">\r\n                  <b>Delivery Status</b>\r\n                </label>\r\n                <select\r\n                  name=\"deliveryStatus\"\r\n                  value={handleOrderDelivery.deliveryStatus}\r\n                  onChange={handleOrderDelivery}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"\">Select Delivery Status</option>\r\n\r\n                  {deliveryStatus.map((status) => {\r\n                    return <option value={status}> {status} </option>;\r\n                  })}\r\n                </select>\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn bg-color custom-bg-text mt-4\"\r\n                  onClick={updateDeliveryStatus}\r\n                >\r\n                  Update Delivery Status\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div\r\n        className=\"card form-card mt-1 ms-2 me-2 mb-2 card-color\"\r\n        style={{\r\n          height: \"35rem\",\r\n        }}\r\n      >\r\n        \r\n        <div\r\n          className=\"card-body\"\r\n          style={{\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          \r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover text-color text-center\">\r\n              <thead className=\"custom-bg table-bordered border-color\">\r\n                <tr>\r\n                  <th scope=\"col\">Order Id</th>\r\n                  <th scope=\"col\">Product</th>\r\n                  <th scope=\"col\">Name</th>\r\n\r\n                  <th scope=\"col\">Quantity</th>\r\n                  <th scope=\"col\">Total Price</th>\r\n                  <th scope=\"col\">Customer Name</th>\r\n                  <th scope=\"col\">Street</th>\r\n                  <th scope=\"col\">City</th>\r\n                  <th scope=\"col\">Pin code</th>\r\n                  <th scope=\"col\">Mobile No.</th>\r\n                  <th scope=\"col\">Order Date</th>\r\n                  <th scope=\"col\">Delivery Date</th>\r\n                  <th scope=\"col\">Delivery Status</th>\r\n                  <th scope=\"col\">Delivery Person</th>\r\n                  {/* <th scope=\"col\">Delivery Mobile No</th> */}\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-color\">\r\n                {allOrderData.map((orderData) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>\r\n                        <b>{orderData.orderId}</b>\r\n                      </td>\r\n                      <td>\r\n                        <img\r\n                          src={\r\n                            \"http://localhost:8080/api/product/\" +\r\n                            orderData.productImage\r\n                          }\r\n                          class=\"img-fluid\"\r\n                          alt=\"product_pic\"\r\n                          style={{\r\n                            maxWidth: \"90px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.productName}</b>\r\n                      </td>\r\n                      \r\n                      <td>\r\n                        <b>{orderData.quantity}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.totalPrice}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.userName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.address.street}</b>\r\n                      </td>\r\n\r\n                      <td>\r\n                        <b>{orderData.address.city}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.address.pincode}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.userPhone}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.orderDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryStatus}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonName}</b>\r\n                      </td>\r\n                      {/* <td>\r\n                        <b>{orderData.deliveryPersonContact}</b>\r\n                      </td> */}\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchOrder;\r\n","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\DeliveryPersonLogin.jsx",["248","249"],[],"import { useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./deliverypersonlogin.css\";\r\nimport carousel1 from \"../images/delivery.png\";\r\n\r\nconst DeliveryPersonLogin = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const [loginRequest, setLoginRequest] = useState({\r\n    emailId: \"\",\r\n    password: \"\",\r\n    role: \"Delivery\",\r\n  });\r\n\r\n  const [response, setResponse] = useState({});\r\n\r\n  const handleUserInput = (e) => {\r\n    setLoginRequest({ ...loginRequest, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const loginAction = (e) => {\r\n    fetch(\"http://localhost:8080/api/user/deliveryperson/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(loginRequest),\r\n    }).then((result) => {\r\n      console.log(\"result\", result);\r\n      result.json().then((res) => {\r\n        if (res && res.role === \"Delivery\") {\r\n          sessionStorage.setItem(\"active-delivery\", JSON.stringify(res));\r\n          toast.success(\"logged in successfully!!!\", {\r\n            position: \"top-center\",\r\n            autoClose: 1000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n          navigate(\"/user/delivery/myorders\");\r\n          window.location.reload(true);\r\n        } else {\r\n          toast.error(\"Invalid email and password\", {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n          return;\r\n        }\r\n      });\r\n    });\r\n    e.preventDefault();\r\n  };\r\n\r\n  const validateForm = (event) => {\r\n    const form = document.getElementById(\"loginForm\");\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    form.classList.add(\"was-validated\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-2 d-flex aligns-items-center justify-content-center\">\r\n        <div\r\n          className=\"card\"\r\n          style={{ width: \"65rem\" ,marginLeft:\"2rem\", marginTop:\"5.7rem\",height:\"28rem\",boxShadow: \"0 13px 15px rgba(128, 20, 20, 0.13) \"}}\r\n        > \r\n          \r\n        \r\n          <div className=\"text-delivery\" >\r\n\r\n           {/* <h3 style={{marginLeft:\"10rem\",marginTop:\"2rem\"}}> Villa</h3>\r\n           <h3 style={{marginLeft:\"13rem\",marginTop:\"-0.8rem\"}}>Namkeen....</h3> */}\r\n          <h1 className=\"dk\" style={{ marginLeft: \"38.7rem\", fontStyle: \"italic\", marginTop:\"3rem\" }}>\r\n              Delivery Person Login\r\n            </h1>            \r\n          </div>\r\n\r\n          <img src={carousel1} alt=\"\" style={{width:\"25rem\",height:\"20rem\",marginTop:\"-2rem\",marginLeft:\"5rem\"}}/>\r\n\r\n          <div className=\"card-body\">\r\n            <form id=\"loginForm\" onSubmit={loginAction} noValidate style={{marginLeft:\"37.6rem\",marginTop:\"-15.7rem\"}}>\r\n              <div className=\"form-floating mb-3\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"emailId\"\r\n                  name=\"emailId\"\r\n                  onChange={handleUserInput}\r\n                  required\r\n                  placeholder=\"Email Id\"\r\n                  style={{ height: \"3rem\" ,maxWidth:\"20rem\",borderRadius: \"5px 10px 0 15px\"}}\r\n                />\r\n                <label htmlFor=\"emailId\">Email Id *</label>\r\n                <div className=\"invalid-feedback\">Please enter a valid email address.</div>\r\n              </div>\r\n              <div className=\"form-floating mb-3\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  onChange={handleUserInput}\r\n                  required\r\n                  autoComplete=\"on\"\r\n                  placeholder=\"Password\"\r\n                  style={{ height: \"3rem\", marginTop: \"1rem\"  ,maxWidth:\"20rem\",borderRadius: \"5px 10px 0 15px\"}}\r\n                />\r\n                <label htmlFor=\"password\">Password *</label>\r\n                <div className=\"invalid-feedback\">Please enter a password.</div>\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn bg-color custom-bg-text\"\r\n                onClick={validateForm}\r\n                style={{ marginLeft: \"6.1rem\", marginTop: \"1.8rem\",borderRadius: \"5px 10px 0 15px\",width:\"8rem\" }}\r\n              >\r\n                Login\r\n              </button>\r\n              <ToastContainer />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default DeliveryPersonLogin;","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AssignDeliveryToOrders.jsx",["250","251","252","253","254"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n \r\nimport AllOrders from \"./AllOrders\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst AssignDeliveryToOrders = (props) => {\r\n  \r\n   let pathOrderId=useParams()\r\n   \r\n \r\n  const [orderId, setOrderId] = useState(\"\");\r\n  const [allOrderData, setAllOrderData] = useState([]);\r\n  const [deliveryPersons, setDeliveryPersons] = useState([]);\r\n\r\n  const [assignDelivery, setAssignDelivery] = useState({\r\n    orderId: \"\",\r\n    deliveryId: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Update the assignDelivery state with the orderId\r\n    setAssignDelivery((prevState) => ({\r\n      ...prevState,\r\n      orderId: pathOrderId.orderId.toString(), // Convert orderId to a string if necessary\r\n    }));\r\n\r\n    \r\n\r\n  }, []);\r\n\r\n  \r\n\r\n  const handleInput = (e) => {\r\n    setAssignDelivery({ ...assignDelivery, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const retrieveAllDeliveryPerson = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:8080/api/user/deliveryperson/all\"\r\n    );\r\n    return response.data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n    const getAllDeliveryPerson = async () => {\r\n      const allDeliveryStatus = await retrieveAllDeliveryPerson();\r\n      if (allDeliveryStatus) {\r\n        setDeliveryPersons(allDeliveryStatus);\r\n      }\r\n    };\r\n\r\n    getAllDeliveryPerson();\r\n  }, []);\r\n\r\n  const getAllOrder = async () => {\r\n    \r\n    const allOrder = await retrieveAllOrder();\r\n    console.log(\"ORDER\",allOrder)\r\n    if (allOrder) {\r\n      setAllOrderData(allOrder);\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n         getAllOrder()\r\n  },[])\r\n  \r\n  const retrieveAllOrder = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:8080/api/user/admin/showorder?orderId=\" + pathOrderId.orderId.toString()\r\n    );\r\n    console.log(response.data);\r\n    return response.data;\r\n  };\r\n\r\n  const searchOrderById = (e) => {\r\n    // console.log(\"this is order\",props.orderId)\r\n    getAllOrder();\r\n    setOrderId(\"\");\r\n    e.preventDefault();\r\n  };\r\n\r\n  const assignDeliveryToOrders = (e) => {\r\n    fetch(\"http://localhost:8080/api/user/admin/order/assignDelivery\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(assignDelivery),\r\n    }).then((result) => {\r\n      console.log(\"result\", result);\r\n      result.json().then((res) => {\r\n        console.log(\"response\", res);\r\n        setAllOrderData({\r\n          orderId: \"\",\r\n          deliveryId: \"\",\r\n        });\r\n\r\n        setAllOrderData(res);\r\n      });\r\n    });\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n        <div>\r\n        <div className=\"card form-card ms-2 me-2 mb-2 border-color card-color\" style={{marginTop:\"20px\"}}>\r\n          \r\n           \r\n         \r\n          <div className=\"card-body text-color\" >\r\n            <form class=\"row g-3\">\r\n              <div class=\"col-auto\">\r\n                <label>\r\n                  <b>Order Id</b>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"orderIdBox\"\r\n                  placeholder=\"Enter Order Id...\"\r\n                  name=\"orderId\"\r\n                  value={assignDelivery.orderId}\r\n                  onChange={handleInput}\r\n                  \r\n                />\r\n              </div>\r\n\r\n              <div className=\"col-auto\">\r\n                <label>\r\n                  <b>Delivery Person</b>\r\n                </label>\r\n                <select\r\n                  onChange={handleInput}\r\n                  className=\"form-control\"\r\n                  name=\"deliveryId\"\r\n                >\r\n                  <option value=\"\">Select Delivery Person</option>\r\n\r\n                  {deliveryPersons.map((person) => {\r\n                    return (\r\n                      <option value={person.id}> {person.firstName} </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n\r\n              <div class=\"col-auto\">\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn bg-color custom-bg-text mt-4\"\r\n                  onClick={assignDeliveryToOrders}\r\n                >\r\n                  Assign Delivery Person\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"card form-card mt-1 ms-2 me-2 mb-2 card-color border-color\"\r\n        style={{\r\n          height: \"35rem\",\r\n        }}\r\n      >\r\n        \r\n        <div\r\n          className=\"card-body\"\r\n          style={{\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          <form class=\"row g-3\">\r\n            \r\n          </form>\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover text-center\">\r\n              <thead className=\"table-bordered border-color custom-bg text-color\">\r\n                <tr>\r\n                  <th scope=\"col\">Order Id</th>\r\n                  <th scope=\"col\">Product</th>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Quantity</th>\r\n                  <th scope=\"col\">Total Price</th>\r\n                  <th scope=\"col\">Customer Name</th>\r\n                  <th scope=\"col\">Street</th>\r\n                  <th scope=\"col\">City</th>\r\n                  <th scope=\"col\">Pin code</th>\r\n                  <th scope=\"col\">Mobile No.</th>\r\n                  <th scope=\"col\">Order Date</th>\r\n                  <th scope=\"col\">Delivery Date</th>\r\n                  <th scope=\"col\">Delivery Status</th>\r\n                  <th scope=\"col\">Delivery Person</th>\r\n                  <th scope=\"col\">Delivery Mobile No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody class=\"text-color\">\r\n                {allOrderData.map((orderData) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>\r\n                        <b>{orderData.orderId}</b>\r\n                      </td>\r\n                      <td>\r\n                        <img\r\n                          src={\r\n                            \"http://localhost:8080/api/product/\" +\r\n                            orderData.productImage\r\n                          }\r\n                          class=\"img-fluid\"\r\n                          alt=\"product_pic\"\r\n                          style={{\r\n                            maxWidth: \"90px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.productName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.quantity}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.totalPrice}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.userName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.address.street}</b>\r\n                      </td>\r\n\r\n                      <td>\r\n                        <b>{orderData.address.city}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.address.pincode}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.userPhone}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.orderDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryStatus}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonContact}</b>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignDeliveryToOrders;\r\n","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AddDeliveryPerson.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\MyDeliveries.jsx",["255"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MyDeliveries = () => {\r\n  const delivery = JSON.parse(sessionStorage.getItem(\"active-delivery\"));\r\n  const [myOrderData, setMyOrderData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getMyOrder = async () => {\r\n      const myOrder = await retrieveMyOrder();\r\n      if (myOrder) {\r\n        console.log(\"my order data is present :)\");\r\n\r\n        setMyOrderData(myOrder);\r\n      }\r\n    };\r\n\r\n    getMyOrder();\r\n  }, []);\r\n\r\n  const retrieveMyOrder = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:8080/api/user/delivery/myorder?deliveryPersonId=\" +\r\n        delivery.id\r\n    );\r\n    console.log(response.data);\r\n    return response.data;\r\n  };\r\n\r\n  \r\n  return (\r\n    <div className=\"mt-3\">\r\n      <div\r\n        className=\"card form-card ms-2 me-2 mb-5 card-color border-color\"\r\n        style={{\r\n          height: \"45rem\",\r\n        }}\r\n      >\r\n        <div className=\"card-header text-center custom-bg text-color\">\r\n          <h2>My Deliveries</h2>\r\n        </div>\r\n        <div\r\n          className=\"card-body\"\r\n          style={{\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover text-color text-center\">\r\n              <thead className=\"custom-bg table-bordered border-color\">\r\n                <tr>\r\n                  <th scope=\"col\">Order Id</th>\r\n                  <th scope=\"col\">Product</th>\r\n                  <th scope=\"col\">Name</th>\r\n                  \r\n                  <th scope=\"col\">Quantity</th>\r\n                  <th scope=\"col\">Total Price</th>\r\n                  <th scope=\"col\">Customer Name</th>\r\n                  <th scope=\"col\">Street</th>\r\n                  <th scope=\"col\">City</th>\r\n                  <th scope=\"col\">Pin code</th>\r\n                  <th scope=\"col\">Mobile No.</th>\r\n                  <th scope=\"col\">Order Date</th>\r\n                  <th scope=\"col\">Delivery Date</th>\r\n                  <th scope=\"col\">Delivery Status</th>\r\n                  <th scope=\"col\">Delivery Person</th>\r\n                  <th scope=\"col\">Delivery Mobile No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-color\">\r\n                {myOrderData.map((orderData) => {\r\n                  return (\r\n                    <tr >\r\n                      <td>\r\n                        <b>{orderData.orderId}</b>\r\n                      </td>\r\n                      <td>\r\n                      <Link  to={`/user/admin/searchOrder/${orderData.orderId}`}>\r\n                        <img     \r\n                          src={\r\n                            \"http://localhost:8080/api/product/\" +\r\n                            orderData.productImage\r\n                          }\r\n                          class=\"img-fluid\"\r\n                          alt=\"product_pic\"\r\n                          style={{\r\n                            maxWidth: \"90px\",\r\n                          }}\r\n                        />\r\n                        </Link>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.productName}</b>\r\n                      </td>\r\n                      \r\n                      <td>\r\n                        <b>{orderData.quantity}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.totalPrice}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.userName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.address.street}</b>\r\n                      </td>\r\n\r\n                      <td>\r\n                        <b>{orderData.address.city}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.address.pincode}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.userPhone}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.orderDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryStatus}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonContact}</b>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyDeliveries;\r\n","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\MyProfile.jsx",["256","257","258"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst MyProfile = () => {\r\n  const user = JSON.parse(sessionStorage.getItem(\"active-user\"));\r\n\r\n  const [profile, setProfile] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getMyProfile = async () => {\r\n      try {\r\n        const profileResult = await retrieveUser();\r\n        setProfile(profileResult);\r\n      } catch (error) {\r\n        setError(error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    getMyProfile();\r\n  }, []);\r\n\r\n  const retrieveUser = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:8080/api/user/profile/${user.id}`\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(\"Failed to retrieve user profile\");\r\n    }\r\n  };\r\n\r\n  const handlePhoneNo = (e) => {\r\n    setProfile((prevProfile) => ({\r\n      ...prevProfile,\r\n      phoneNo: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleWallet = (e) => {\r\n    setProfile((prevProfile) => ({\r\n      ...prevProfile,\r\n      walletAmount: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleAddress = (e) => {\r\n    setProfile((prevProfile) => ({\r\n      ...prevProfile,\r\n      address: {\r\n        ...prevProfile.address,\r\n        street: e.target.value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handlePincode = (e) => {\r\n    setProfile((prevProfile) => ({\r\n      ...prevProfile,\r\n      address: {\r\n        ...prevProfile.address,\r\n        pincode: e.target.value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleCity = (e) => {\r\n    setProfile((prevProfile) => ({\r\n      ...prevProfile,\r\n      address: {\r\n        ...prevProfile.address,\r\n        city: e.target.value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSaveButton = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        `http://localhost:8080/api/user/profile/${user.id}`,\r\n        profile\r\n      );\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gd container\">\r\n      <div style={{ marginTop: \"60px\" }}>\r\n        <div className=\"card\" style={{ borderRadius: \"10px\" }}>\r\n          <div className=\"card-header custom-bg\">\r\n            <h2>Profile Page</h2>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form className=\"row g-3\">\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"firstName\" className=\"form-label\">\r\n                  First Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"firstName\"\r\n                  value={profile?.firstName || \"\"}\r\n                  style={{ background: \"#e8ecef\" }}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"inputPassword4\" className=\"form-label\">\r\n                  Last Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputPassword4\"\r\n                  value={profile?.lastName || \"\"}\r\n                  style={{ background: \"#e8ecef\" }}\r\n                />\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <label htmlFor=\"inputEmailId\" className=\"form-label\">\r\n                  Email Id\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"inputEmailId\"\r\n                  placeholder=\"1234 Main St\"\r\n                  value={profile?.emailId || \"\"}\r\n                  style={{ background: \"#e8ecef\" }}\r\n                />\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <label htmlFor=\"inputAddress2\" className=\"form-label\">\r\n                  Address\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputAddress2\"\r\n                  placeholder=\"Apartment, studio, or floor\"\r\n                  value={profile?.address?.street || \"\"}\r\n                  onChange={handleAddress}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"inputCity\" className=\"form-label\">\r\n                  City\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputCity\"\r\n                  value={profile?.address?.city || \"\"}\r\n                  onChange={handleCity}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <label htmlFor=\"inputstate\" className=\"form-label\">\r\n                  Mobile Number\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputstate\"\r\n                  value={profile?.phoneNo || \"\"}\r\n                  onChange={handlePhoneNo}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-2\">\r\n                <label htmlFor=\"inputZip\" className=\"form-label\">\r\n                  Pincode\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputZip\"\r\n                  value={profile?.address?.pincode || \"\"}\r\n                  onChange={handlePincode}\r\n                />\r\n              </div>\r\n              <div className=\"col-6\" style={{ marginTop: \"30px\" }}>\r\n                <label htmlFor=\"inputZip\" className=\"form-label\">\r\n                  <h5>Wallet Amount:</h5>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={profile?.walletAmount || 0}\r\n                  onChange={handleWallet}\r\n                  readOnly\r\n                  style={{ background: \"#e8ecef\" }}\r\n                />\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn bg-color btn-primary\"\r\n                    onClick={handleSaveButton}\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyProfile;","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\SuccessPage.jsx",["259","260","261","262","263"],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\ProductDetail.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\AddCategoryForm.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\AddProductForm.jsx",["264"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AddProductForm = () => {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const retrieveAllCategories = async () => {\r\n    const response = await axios.get(\"http://localhost:8080/api/category/all\");\r\n    return response.data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getAllCategories = async () => {\r\n      const allCategories = await retrieveAllCategories();\r\n      if (allCategories) {\r\n        setCategories(allCategories);\r\n      }\r\n    };\r\n\r\n    getAllCategories();\r\n  }, []);\r\n  \r\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\r\n  \r\n  const [product, setProduct] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    quantity: \"\",\r\n    categoryId: \"\",\r\n  });\r\n\r\n  const handleInput = (e) => {\r\n    setProduct({ ...product, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const callToast=(message)=>{\r\n     \r\n    toast.success(message, {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n  const saveProduct = (e) => {\r\n    e.preventDefault()\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", selectedPhoto);\r\n    formData.append(\"title\", product.title);\r\n    formData.append(\"description\", product.description);\r\n    formData.append(\"price\", product.price);\r\n    formData.append(\"quantity\", product.quantity);\r\n    formData.append(\"categoryId\", product.categoryId);\r\n\r\n    axios\r\n      .post(\"http://localhost:8080/api/product/add\", formData)\r\n      .then((resp) => {\r\n        let result = resp.data.data;\r\n        callToast(\"Product Added Successfully\");\r\n        setProduct({title: \"\", description: \"\", price: \"\",quantity: \"\",categoryId: \"\",photo: \"\",  \r\n        });\r\n        setCategories([]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        alert(\"Error saving product\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"mt-2 d-flex aligns-items-center justify-content-center\">\r\n        <div\r\n          class=\"card form-card border-color card-color\"\r\n          style={{ width: \"35rem\" }}\r\n        >\r\n          <div className=\"card-header custom-bg text-color text-center\">\r\n            <h5 class=\"card-title\">Add Product</h5>\r\n          </div>\r\n          <div class=\"card-body text-color\">\r\n            <form onSubmit={saveProduct}>\r\n              <div class=\"mb-3\">\r\n                <label for=\"title\" class=\"form-label\">\r\n                  <b>Product Title</b>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"title\"\r\n                  name=\"title\"\r\n                  onChange={handleInput}\r\n                  value={product.title}\r\n                  required\r\n                />\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"description\" class=\"form-label\">\r\n                  <b>Product Description</b>\r\n                </label>\r\n                <textarea\r\n                  class=\"form-control\"\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  rows=\"3\"\r\n                  onChange={handleInput}\r\n                  value={product.description}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">\r\n                  <b>Category</b>\r\n                </label>\r\n\r\n                <select\r\n                  name=\"categoryId\"\r\n                  onChange={handleInput}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"\">Select Category</option>\r\n\r\n                  {categories.map((category) => {\r\n                    return (\r\n                      <option value={category.id}> {category.title} </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n\r\n              <div class=\"mb-3 mt-1\">\r\n                <label for=\"quantity\" class=\"form-label\">\r\n                  <b>Product Quantity</b>\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  class=\"form-control\"\r\n                  id=\"quantity\"\r\n                  name=\"quantity\"\r\n                  onChange={handleInput}\r\n                  value={product.quantity}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div class=\"mb-3\">\r\n                <label for=\"price\" class=\"form-label\">\r\n                  <b>Product Price</b>\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  class=\"form-control\"\r\n                  id=\"price\"\r\n                  name=\"price\"\r\n                  onChange={handleInput}\r\n                  value={product.price}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div class=\"mb-3\">\r\n                <label for=\"formFile\" class=\"form-label\">\r\n                  <b> Select Product Image</b>\r\n                </label>\r\n                <input\r\n                  class=\"form-control\"\r\n                  type=\"file\"\r\n                  id=\"formFile\"\r\n                  name=\"photo\"\r\n                  value={product.photo}\r\n                  onChange={(e) => setSelectedPhoto(e.target.files[0])}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                class=\"btn bg-color custom-bg-text\"\r\n                // onClick={saveProduct}\r\n              >\r\n                Add Product\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProductForm;","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\CategoryNavigator.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\ProductCard.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\GetAllCategories.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\Carousel.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\RoleNav.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\AdminHeader.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\HeaderUser.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\NormalHeader.jsx",["265","266"],[],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\"; // Import axios for making API requests\r\n\r\nconst NormalHeader = () => {\r\n  \r\n\r\n  \r\n\r\n  return (\r\n    <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0 me-5\">\r\n\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/search\" className=\"nav-link active\" aria-current=\"page\">\r\n          \r\n          <i class=\"fa-solid fa-magnifying-glass fa-beat\" style={{marginRight:\"5px\"}}></i>\r\n          <b className=\"text-color\">Search</b>\r\n        </Link>\r\n      </li>\r\n      \r\n      \r\n      <li className=\"nav-item\">\r\n        <Link to=\"/user/register\" className=\"nav-link active\" aria-current=\"page\">\r\n          <b className=\"text-color\">Register</b>\r\n        </Link>\r\n      </li>\r\n\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/user/login\" className=\"nav-link active\" aria-current=\"page\">\r\n          <b className=\"text-color\">Login </b>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\nexport default NormalHeader;","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\DeliveryPersonHeader.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\UserLoginForm.jsx",["267","268","269"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport bg from \"../images/bg_img.jpg\";\r\nimport \"./UserLoginForm.css\";\r\nimport { GoogleOAuthProvider } from \"@react-oauth/google\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\n// import bgt from \"../images/nam_bg.png\";\r\nimport carousel1 from \"../images/image.png\";\r\n\r\n\r\nconst UserLoginForm = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const [loginRequest, setLoginRequest] = useState({\r\n    emailId: \"\",\r\n    password: \"\",\r\n    role: \"Customer\",\r\n  });\r\n\r\n  const handleUserInput = (e) => {\r\n    setLoginRequest({ ...loginRequest, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const loginAction = (e) => {\r\n    e.preventDefault();\r\n    if (!e.target.checkValidity()) {\r\n      toast.error(\"Please fill in all the required fields\", {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n\r\n    fetch(\"http://localhost:8080/api/user/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(loginRequest),\r\n    })\r\n      .then((result) => {\r\n        console.log(\"result\", result);\r\n        result\r\n          .json()\r\n          .then((res) => {\r\n            console.log(res);\r\n\r\n            if (res && res.role === \"Admin\") {\r\n              console.log(\"Working fine:)\");\r\n              sessionStorage.setItem(\"active-admin\", JSON.stringify(res));\r\n            } else if (res && res.role === \"Customer\") {\r\n              sessionStorage.setItem(\"active-user\", JSON.stringify(res));\r\n            } else if (res && res.role === \"Delivery\") {\r\n              sessionStorage.setItem(\"active-delivery\", JSON.stringify(res));\r\n            } else {\r\n              // Handle the case when res is null or the role property is missing\r\n              toast.error(\"Invalid email and password\", {\r\n                position: \"top-center\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n              });\r\n              return;\r\n            }\r\n\r\n            toast.success(\"logged in successfully!!!\", {\r\n              position: \"top-center\",\r\n              autoClose: 1000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n\r\n            navigate(\"/home\");\r\n            window.location.reload(true);\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n            // Handle the error here, such as displaying an error message to the user\r\n            toast.error(\"Invalid email and password\", {\r\n              position: \"top-center\",\r\n              autoClose: 2000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        // Handle the error here, such as displaying an error message to the user\r\n        toast.error(\"Failed to connect to the server\", {\r\n          position: \"top-center\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      });\r\n  };\r\n\r\n  const [user, setUser] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    emailId: \"\",\r\n    password: \"\",\r\n    phoneNo: \"\",\r\n    street: \"\",\r\n    city: \"\",\r\n    pincode: \"\",\r\n    role: \"\",\r\n  });\r\n\r\n  const addUser = async (user) => {\r\n    const res = await axios.post(\r\n      \"http://localhost:8080/api/user/register\",\r\n      user\r\n    );\r\n    console.log(res.data);\r\n    return res.data;\r\n  };\r\n\r\n  const loginWithGoogle = (details) => {\r\n    user.firstName = details.given_name;\r\n    user.lastName = details.family_name;\r\n    user.emailId = details.email;\r\n    user.password = \"\";\r\n    user.role = \"Customer\";\r\n    setUser(user);\r\n\r\n    axios\r\n      .get(\"http://localhost:8080/api/user/email/\" + user.emailId)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          sessionStorage.setItem(\"active-user\", JSON.stringify(res.data));\r\n          navigate(\"/home\");\r\n          window.location.reload(true);\r\n        } else {\r\n          addUser(user)\r\n            .then((res) => {\r\n              sessionStorage.setItem(\"active-user\", JSON.stringify(res));\r\n              navigate(\"/home\");\r\n              window.location.reload(true);\r\n            })\r\n            .catch((error) => {\r\n              console.error(error);\r\n              // Handle the error here, such as displaying an error message to the user\r\n              toast.error(\"Failed to log in via Google. Please try again.\", {\r\n                position: \"top-center\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n              });\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const validateForm = (event) => {\r\n    const form = document.getElementById(\"loginForm\");\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    form.classList.add(\"was-validated\");\r\n  };\r\n\r\n  return (  \r\n\r\n      <div className=\"mt-2 d-flex aligns-items-center justify-content-center\">\r\n        <div\r\n          className=\"card\"\r\n          style={{ width: \"68rem\" ,marginLeft:\"2rem\", marginTop:\"4rem\",height:\"32rem\",boxShadow: \"0 13px 15px rgba(128, 20, 20, 0.13) \",backgroundColor:\"white\"}}\r\n        > \r\n    \r\n          <img src={carousel1} alt=\"\" style={{width:\"24rem\",height:\"21rem\",marginTop:\"5rem\",marginLeft:\"6rem\"}}/>\r\n       \r\n          <div className=\"text\">\r\n\r\n           <h3 className=\"villa\" style={{marginLeft:\"12.7rem\",marginTop:\"-6.8rem\",fontStyle:\"italic\"}}> Villa</h3>\r\n           <h3 className=\"villa\" style={{marginLeft:\"15.4rem\",marginTop:\"-0.8rem\" ,fontStyle:\"italic\"}}>Namkeen....</h3>\r\n          <h1 className=\"k\" style={{ marginLeft: \"45rem\", fontStyle: \"italic\", marginTop:\"-20rem\"}}>\r\n              User Login\r\n            </h1>            \r\n          </div>\r\n\r\n              <div className=\"card-body\">\r\n                <form id=\"loginForm\" className=\"needs-validation\" onSubmit={loginAction} noValidate style={{marginLeft:\"39rem\",marginTop:\"-17.3rem\"}}>\r\n                  <div className=\"mb-3\">\r\n                    <div className=\"form-floating\">\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        id=\"emailId\"\r\n                        name=\"emailId\"\r\n                        placeholder=\"Email ID\"\r\n                        onChange={handleUserInput}\r\n                        value={loginRequest.emailId}\r\n                        required\r\n                        style={{ height: \"3rem\" ,maxWidth:\"20rem\",borderRadius: \"5px 10px 0 15px\"}}\r\n                      />\r\n                      <label htmlFor=\"emailId\">Email ID *</label>\r\n                      <div className=\"invalid-feedback\">Please provide a valid email.</div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"mb-3\">\r\n                    <div className=\"form-floating\">\r\n                      <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        onChange={handleUserInput}\r\n                        value={loginRequest.password}\r\n                        autoComplete=\"on\"\r\n                        required\r\n                        style={{ height: \"3rem\" ,maxWidth:\"20rem\",borderRadius: \"5px 10px 0 15px\"}}\r\n                      />\r\n                      <label htmlFor=\"password\">Password *</label>\r\n                      <div className=\"invalid-feedback\">Please provide a password.</div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn bg-color custom-bg-text\"\r\n                      onClick={validateForm}\r\n                      style={{ marginLeft: \"6.1rem\", marginTop: \"1.4rem\",borderRadius: \"5px 10px 0 15px\",width:\"8rem\" }}\r\n                    >\r\n                      Login\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"line\">\r\n                    <hr class=\"l1\" style={{ width: \"9rem\", height: \"1px\", backgroundColor: \"white\", marginTop: \"1.6rem\", marginLeft: \"0rem\" }} />\r\n                    <h6 style={{ marginLeft: \"9.5rem\", marginTop: \"-1.7rem\", fontStyle: \"italic\" }}>OR</h6>\r\n                    <hr class=\"l2\" style={{ width: \"9rem\", marginLeft: \"11.3rem\", marginTop: \"-1.05rem\" }} />\r\n                  </div>\r\n                  <div className=\"login-gmail\">\r\n                    <button style={{ marginTop: \"1rem\", marginLeft: \"3.7rem\", borderRadius: \"5rem\",borderColor:\"white\" }}>\r\n                      <GoogleOAuthProvider clientId=\"668976964137-tljnqvmeh5jq54u9ldevost06cn878pl.apps.googleusercontent.com\">\r\n                        <GoogleLogin\r\n                          onSuccess={(credentialResponse) => {\r\n                            const details = jwt_decode(credentialResponse.credential);\r\n                            console.log(\"\", \"detail of user\", details);\r\n                            loginWithGoogle(details);\r\n                          }}\r\n                          onError={() => {\r\n                            console.log(\"Login Failed\");\r\n                          }}\r\n                        >\r\n                          Login Via Google\r\n                        </GoogleLogin>\r\n                      </GoogleOAuthProvider>\r\n                    </button>\r\n                  </div>\r\n                  <ToastContainer />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        // </div>\r\n      \r\n    \r\n  );\r\n};\r\n\r\nexport default UserLoginForm;","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AddressModification.jsx",["270","271","272","273"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaWindows } from \"react-icons/fa\";\r\nimport \"./addressmodify.css\"\r\n\r\nconst AddressModification = () => {\r\n \r\n    const navigate = useNavigate();\r\n\r\n  const user = JSON.parse(sessionStorage.getItem(\"active-user\"));\r\n\r\n  const [profile, setProfile] = useState({\r\n    // firstName: \"\",\r\n    // lastName: \"\",\r\n    // emailId: \"\",\r\n    // phoneNo: \"\",\r\n    address: {\r\n      street: \"\",\r\n      city: \"\",\r\n      pincode: \"\",\r\n    },\r\n    wallet:\"\"\r\n  });\r\n\r\n  const proceedfunc = () => {\r\n    navigate(\"/user/order/payment\")\r\n    window.location.href=\"/user/order/payment\"\r\n    console.log(\"hello\");\r\n    // <Link to=\"/user/order/payment/successpage\"></Link>\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getMyProfile = async () => {\r\n\r\n      const profileResult = await retrieveUser();\r\n\r\n      if (profileResult) {\r\n        console.log(\"my profile is present\");\r\n      }\r\n      setProfile(profileResult);\r\n    };\r\n    \r\n    getMyProfile();\r\n\r\n  }, []);\r\n\r\n \r\n  const retrieveUser = async () => {\r\n    const res = await axios.get(\r\n      \"http://localhost:8080/api/user/profile/\" + user.id\r\n    );\r\n    console.log(res.data);\r\n    return res.data;\r\n  };\r\n  const handleAddress = (e) => {\r\n    setProfile((prevProfile) => ({\r\n      ...prevProfile,\r\n      address: {\r\n        ...prevProfile.address,\r\n        street: e.target.value,\r\n      },\r\n    }));\r\n  };\r\n  \r\n  const handlePincode = (e) => {\r\n    setProfile((prevProfile) => ({\r\n      ...prevProfile,\r\n      address: {\r\n        ...prevProfile.address,\r\n        pincode: e.target.value,\r\n      },\r\n    }));\r\n  };\r\n  \r\n  const handleCity = (e) => {\r\n    setProfile((prevProfile) => ({\r\n      ...prevProfile,\r\n      address: {\r\n        ...prevProfile.address,\r\n        city: e.target.value,\r\n      },\r\n    }));\r\n  };\r\n  \r\n\r\n  const handleSaveButton = async () => {\r\n    try {\r\n      // setProfile(profile)\r\n      const response = await axios.post(\r\n        \"http://localhost:8080/api/user/profile/\"+user.id,\r\n        profile\r\n      );\r\n      console.log(response.data);\r\n      \r\n      \r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n    }\r\n\r\n    \r\n    // navigate(\"/user/mycart\"); \r\n    // window.location.reload(true);\r\n    window.history.back();\r\n  };\r\n\r\n  return (\r\n    <div className=\"address-img\">\r\n    <div className=\"container\">\r\n      <div className=\"vertical-down\" >\r\n        <div className=\"card\" style={{borderRadius:\"10px\", width:\"40rem\",height:\"19rem\",marginTop:\"1rem\",marginLeft:\"45rem\"}}>\r\n          <div className=\"card-header custom-bg\" style={{backgroundColor:\"#e06a70\",color:\"whitesmoke\",fontStyle:\"italic\"}}>\r\n            <h2  style={{marginLeft:\"11.6rem\"}}>Drop-Off Details</h2>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form className=\"row g-3\">\r\n              \r\n              <div className=\"col-12\">\r\n                <label htmlFor=\"inputAddress2\" className=\"form-label\">\r\n                  <b>Street</b>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputAddress2\"\r\n                  placeholder=\"Apartment, studio, or floor\"\r\n                  value={profile.address.street}\r\n                   onChange={handleAddress}\r\n                  //  style={{width:\"37rem\"}}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"inputCity\" className=\"form-label\">\r\n                  <b>City</b>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputCity\"\r\n                  value={profile.address.city}\r\n                   onChange={handleCity}\r\n                  //  style={{marginLeft:\"1rem\",width:\"17.5rem\"}}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-2\">\r\n                <label htmlFor=\"inputZip\" className=\"form-label\">\r\n                  <b>Pincode</b>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputZip\"\r\n                  value={profile.address.pincode}\r\n                   onChange={handlePincode}\r\n                  //  style={{marginLeft:\"1rem\"}}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"col-12\" style={{ marginTop: \"23px\", marginLeft:\"210px\"}}>\r\n                <button type=\"submit\" className=\"btn bg-color btn-primary\" style={{marginLeft:50,width:\"5rem\"}}\r\n                onClick={handleSaveButton}>\r\n                  Save\r\n                </button>\r\n          \r\n              </div>\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressModification;","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AddUserForm.js",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\validation.js",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\SearchBox.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\AdminProductCart.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\UpdateStock.jsx",["274","275"],[],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport userEvent from \"@testing-library/user-event\";\r\n\r\nconst UpdateStock = () => {\r\n  const {productId} = useParams();\r\n  const [stock,setStock]=useState('');\r\n\r\n  \r\n\r\n  const [product, setProduct] = useState({\r\n    id: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    quantity: \"\",\r\n    price: \"\",\r\n    imageName: \"\",\r\n    category: { id: \"\", title: \"\" },\r\n  });\r\n\r\n  const retrieveProduct = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:8080/api/product/\"+productId\r\n    );\r\n\r\n    return response.data;\r\n  };\r\n\r\n  const addProduct=async (stocks)=>{\r\n    const res=await axios.post(\"http://localhost:8080/api/product/update/\"+productId,\r\n    stocks);\r\n\r\n    return res.data;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getProduct = async () => {\r\n      const retrievedProduct = await retrieveProduct();\r\n\r\n      setProduct(retrievedProduct);\r\n    };\r\n\r\n    getProduct();\r\n    console.log(\"hello product\",product)\r\n  }, [stock]);\r\n\r\n  \r\n  const handleStock=(e)=>{\r\n       \r\n       try{\r\n       const result=addProduct(stock)\r\n       console.log(\"stocks:\",stock)\r\n       console.log(\"update-p\",result)\r\n       }\r\n       catch(error){\r\n        alert(\"Something went wrong\",error)\r\n       }\r\n\r\n       \r\n       //e.preventDefault()\r\n  }\r\n\r\n\r\n  return (\r\n    <div  className=\"card form-card ms-2 me-2 mb-2 border-color card-color\" style={{marginTop:\"20px\"}}>\r\n\r\n           <div className=\"card-body text-color\" >\r\n            <form class=\"row g-3\">\r\n              <div class=\"col-auto\">\r\n                <label>\r\n                  <b>Enter Stocks</b>\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  class=\"form-control\"\r\n                  id=\"orderIdBox\"\r\n                  placeholder=\"Stock\"\r\n                  name=\"orderId\"\r\n                  onChange={(e)=>setStock(e.target.value)}\r\n                  value={stock}\r\n                  max={100}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div class=\"col-auto\">\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn bg-color custom-bg-text mt-4\"\r\n                  onClick={handleStock}\r\n                >\r\n                 UpdateStock\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n       \r\n      <div\r\n        className=\"card form-card mt-1 ms-2 me-2 mb-2 card-color border-color\"\r\n        style={{\r\n          height: \"35rem\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"card-body\"\r\n          style={{\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          <form class=\"row g-3\"></form>\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover text-center\">\r\n              <thead className=\"table-bordered border-color custom-bg text-color\">\r\n                <tr>\r\n                  \r\n                  <th scope=\"col\">Title</th>\r\n                  <th scope=\"col\">Image</th>\r\n                  <th scope=\"col\">Stock</th>\r\n                  <th scope=\"col\"> Price</th>\r\n                 \r\n                </tr>\r\n              </thead>\r\n              <tbody class=\"text-color\">\r\n               \r\n                  \r\n                    <tr>\r\n                      <td>\r\n                        <b>{product.title}</b>\r\n                      </td>\r\n                      <td>\r\n                        <img\r\n                          src={\r\n                            \"http://localhost:8080/api/product/\" +product.imageName\r\n                          }\r\n                          class=\"img-fluid\"\r\n                          alt=\"product_pic\"\r\n                          style={{\r\n                            maxWidth: \"90px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <b>{product.quantity}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{product.price}</b>\r\n                      </td>\r\n                    </tr>\r\n                  \r\n                \r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateStock;\r\n","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\Modal.js",["276","277","278","279","280","281","282","283"],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\Modall.jsx",["284","285"],[],"// import React from 'react'\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './modall.css'\r\n\r\nconst Modall = ({closeModall}) => {\r\n\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  const user = JSON.parse(sessionStorage.getItem(\"active-user\"));\r\n\r\n  const [profile, setProfile] = useState({\r\n    // firstName: \"\",\r\n    // lastName: \"\",\r\n    // emailId: \"\",\r\n    // phoneNo: \"\",\r\n    address: {\r\n      street: \"\",\r\n      city: \"\",\r\n      pincode: \"\",\r\n    },\r\n    wallet:\"\"\r\n  });\r\n\r\n  const proceedfunc = () => {\r\n    navigate(\"/user/order/payment\")\r\n    window.location.href=\"/user/order/payment\"\r\n    console.log(\"hello\");\r\n    // <Link to=\"/user/order/payment/successpage\"></Link>\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getMyProfile = async () => {\r\n\r\n      const profileResult = await retrieveUser();\r\n\r\n      if (profileResult) {\r\n        console.log(\"my profile is present\");\r\n      }\r\n      setProfile(profileResult);\r\n    };\r\n    \r\n    getMyProfile();\r\n\r\n  }, []);\r\n\r\n \r\n  const retrieveUser = async () => {\r\n    const res = await axios.get(\r\n      \"http://localhost:8080/api/user/profile/\" + user.id\r\n    );\r\n    console.log(res.data);\r\n    return res.data;\r\n  };\r\n  const handleAddress = (e) => {\r\n    setProfile((prevProfile) => ({\r\n      ...prevProfile,\r\n      address: {\r\n        ...prevProfile.address,\r\n        street: e.target.value,\r\n      },\r\n    }));\r\n  };\r\n  \r\n  const handlePincode = (e) => {\r\n    setProfile((prevProfile) => ({\r\n      ...prevProfile,\r\n      address: {\r\n        ...prevProfile.address,\r\n        pincode: e.target.value,\r\n      },\r\n    }));\r\n  };\r\n  \r\n  const handleCity = (e) => {\r\n    setProfile((prevProfile) => ({\r\n      ...prevProfile,\r\n      address: {\r\n        ...prevProfile.address,\r\n        city: e.target.value,\r\n      },\r\n    }));\r\n  };\r\n  \r\n\r\n  const handleSaveButton = async () => {\r\n    try {\r\n      // setProfile(profile)\r\n      const response = await axios.post(\r\n        \"http://localhost:8080/api/user/profile/\"+user.id,\r\n        profile\r\n      );\r\n      console.log(response.data);\r\n      \r\n      \r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n    }\r\n\r\n    \r\n    // navigate(\"/user/mycart\"); \r\n    window.location.reload(true);\r\n    // window.history.back();\r\n  };\r\n\r\n  return (\r\n      <>\r\n<div className=\"modallBackground\">\r\n      <div className=\"modallcontainer\">\r\n          <div className=\"title-close-btn\">\r\n          {/* <button onClick={() => closeModall(false)}> X </button> */}\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" onClick={() => closeModall(false)}></button>\r\n          </div>\r\n          \r\n          <div className=\"title\">\r\n              <h2>New Address</h2>\r\n          </div>\r\n          \r\n          <hr style={{marginTop:\"0.4rem\"}}></hr>\r\n          <div className=\"card-body\">\r\n            <form className=\"row g-3\">\r\n              \r\n              <div className=\"col-12\"  style={{marginTop:\"0.3rem\"}}>\r\n                <label htmlFor=\"inputAddress2\" className=\"form-label\">\r\n                  <b>Street</b>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputAddress2\"\r\n                  placeholder=\"Apartment, studio, or floor\"\r\n                  value={profile.address.street}\r\n                   onChange={handleAddress}\r\n                  //  style={{width:\"37rem\"}}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"inputCity\" className=\"form-label\">\r\n                  <b>City</b>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputCity\"\r\n                  value={profile.address.city}\r\n                   onChange={handleCity}\r\n                  //  style={{marginLeft:\"1rem\",width:\"17.5rem\"}}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-2\">\r\n                <label htmlFor=\"inputZip\" className=\"form-label\" style={{marginLeft:\"1rem\"}}>\r\n                  <b>Pincode</b>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputZip\"\r\n                  value={profile.address.pincode}\r\n                   onChange={handlePincode}\r\n                   style={{width:\"7rem\",marginLeft:\"1rem\"}}\r\n                />\r\n              </div>\r\n              </form>\r\n          </div>    \r\n          <div className=\"footer\" >\r\n              <button id=\"cancelbtn\" onClick={() => closeModall(false)}>Cancel</button>\r\n              <button onClick={handleSaveButton}>Save</button>\r\n          </div>\r\n      </div>\r\n    </div>\r\n</>\r\n  )\r\n}\r\n\r\nexport default Modall",{"ruleId":"286","severity":1,"message":"287","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":25},{"ruleId":"290","severity":1,"message":"291","line":52,"column":6,"nodeType":"292","endLine":52,"endColumn":17,"suggestions":"293"},{"ruleId":"290","severity":1,"message":"294","line":40,"column":6,"nodeType":"292","endLine":40,"endColumn":18,"suggestions":"295"},{"ruleId":"286","severity":1,"message":"296","line":6,"column":10,"nodeType":"288","messageId":"289","endLine":6,"endColumn":15},{"ruleId":"286","severity":1,"message":"297","line":7,"column":59,"nodeType":"288","messageId":"289","endLine":7,"endColumn":65},{"ruleId":"286","severity":1,"message":"298","line":8,"column":10,"nodeType":"288","messageId":"289","endLine":8,"endColumn":14},{"ruleId":"286","severity":1,"message":"299","line":28,"column":9,"nodeType":"288","messageId":"289","endLine":28,"endColumn":24},{"ruleId":"286","severity":1,"message":"300","line":32,"column":10,"nodeType":"288","messageId":"289","endLine":32,"endColumn":21},{"ruleId":"286","severity":1,"message":"301","line":61,"column":9,"nodeType":"288","messageId":"289","endLine":61,"endColumn":20},{"ruleId":"290","severity":1,"message":"302","line":118,"column":6,"nodeType":"292","endLine":118,"endColumn":8,"suggestions":"303"},{"ruleId":"286","severity":1,"message":"304","line":145,"column":10,"nodeType":"288","messageId":"289","endLine":145,"endColumn":20},{"ruleId":"290","severity":1,"message":"305","line":161,"column":6,"nodeType":"292","endLine":161,"endColumn":8,"suggestions":"306"},{"ruleId":"286","severity":1,"message":"307","line":171,"column":11,"nodeType":"288","messageId":"289","endLine":171,"endColumn":22},{"ruleId":"286","severity":1,"message":"308","line":171,"column":23,"nodeType":"288","messageId":"289","endLine":171,"endColumn":37},{"ruleId":"290","severity":1,"message":"309","line":26,"column":6,"nodeType":"292","endLine":26,"endColumn":8,"suggestions":"310"},{"ruleId":"290","severity":1,"message":"311","line":21,"column":6,"nodeType":"292","endLine":21,"endColumn":8,"suggestions":"312"},{"ruleId":"286","severity":1,"message":"313","line":5,"column":8,"nodeType":"288","messageId":"289","endLine":5,"endColumn":30},{"ruleId":"286","severity":1,"message":"314","line":18,"column":10,"nodeType":"288","messageId":"289","endLine":18,"endColumn":18},{"ruleId":"286","severity":1,"message":"315","line":18,"column":20,"nodeType":"288","messageId":"289","endLine":18,"endColumn":31},{"ruleId":"286","severity":1,"message":"316","line":10,"column":10,"nodeType":"288","messageId":"289","endLine":10,"endColumn":17},{"ruleId":"290","severity":1,"message":"317","line":29,"column":6,"nodeType":"292","endLine":29,"endColumn":8,"suggestions":"318"},{"ruleId":"286","severity":1,"message":"319","line":58,"column":9,"nodeType":"288","messageId":"289","endLine":58,"endColumn":24},{"ruleId":"286","severity":1,"message":"314","line":17,"column":10,"nodeType":"288","messageId":"289","endLine":17,"endColumn":18},{"ruleId":"286","severity":1,"message":"315","line":17,"column":20,"nodeType":"288","messageId":"289","endLine":17,"endColumn":31},{"ruleId":"286","severity":1,"message":"320","line":5,"column":8,"nodeType":"288","messageId":"289","endLine":5,"endColumn":17},{"ruleId":"286","severity":1,"message":"316","line":13,"column":10,"nodeType":"288","messageId":"289","endLine":13,"endColumn":17},{"ruleId":"290","severity":1,"message":"317","line":31,"column":6,"nodeType":"292","endLine":31,"endColumn":8,"suggestions":"321"},{"ruleId":"290","severity":1,"message":"322","line":69,"column":5,"nodeType":"292","endLine":69,"endColumn":7,"suggestions":"323"},{"ruleId":"286","severity":1,"message":"319","line":79,"column":9,"nodeType":"288","messageId":"289","endLine":79,"endColumn":24},{"ruleId":"290","severity":1,"message":"311","line":21,"column":6,"nodeType":"292","endLine":21,"endColumn":8,"suggestions":"324"},{"ruleId":"286","severity":1,"message":"325","line":8,"column":10,"nodeType":"288","messageId":"289","endLine":8,"endColumn":19},{"ruleId":"286","severity":1,"message":"326","line":9,"column":10,"nodeType":"288","messageId":"289","endLine":9,"endColumn":15},{"ruleId":"290","severity":1,"message":"302","line":24,"column":6,"nodeType":"292","endLine":24,"endColumn":8,"suggestions":"327"},{"ruleId":"286","severity":1,"message":"328","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":19},{"ruleId":"286","severity":1,"message":"296","line":4,"column":10,"nodeType":"288","messageId":"289","endLine":4,"endColumn":15},{"ruleId":"286","severity":1,"message":"329","line":18,"column":10,"nodeType":"288","messageId":"289","endLine":18,"endColumn":20},{"ruleId":"290","severity":1,"message":"330","line":23,"column":5,"nodeType":"292","endLine":23,"endColumn":16,"suggestions":"331"},{"ruleId":"290","severity":1,"message":"332","line":39,"column":6,"nodeType":"292","endLine":39,"endColumn":8,"suggestions":"333"},{"ruleId":"286","severity":1,"message":"334","line":64,"column":13,"nodeType":"288","messageId":"289","endLine":64,"endColumn":19},{"ruleId":"286","severity":1,"message":"335","line":1,"column":17,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"336","line":3,"column":8,"nodeType":"288","messageId":"289","endLine":3,"endColumn":13},{"ruleId":"286","severity":1,"message":"337","line":1,"column":17,"nodeType":"288","messageId":"289","endLine":1,"endColumn":26},{"ruleId":"286","severity":1,"message":"298","line":4,"column":10,"nodeType":"288","messageId":"289","endLine":4,"endColumn":14},{"ruleId":"286","severity":1,"message":"338","line":5,"column":8,"nodeType":"288","messageId":"289","endLine":5,"endColumn":10},{"ruleId":"286","severity":1,"message":"298","line":4,"column":10,"nodeType":"288","messageId":"289","endLine":4,"endColumn":14},{"ruleId":"286","severity":1,"message":"339","line":5,"column":10,"nodeType":"288","messageId":"289","endLine":5,"endColumn":19},{"ruleId":"286","severity":1,"message":"340","line":27,"column":9,"nodeType":"288","messageId":"289","endLine":27,"endColumn":20},{"ruleId":"290","severity":1,"message":"302","line":47,"column":6,"nodeType":"292","endLine":47,"endColumn":8,"suggestions":"341"},{"ruleId":"286","severity":1,"message":"342","line":6,"column":8,"nodeType":"288","messageId":"289","endLine":6,"endColumn":17},{"ruleId":"290","severity":1,"message":"343","line":48,"column":6,"nodeType":"292","endLine":48,"endColumn":13,"suggestions":"344"},{"ruleId":"286","severity":1,"message":"298","line":3,"column":10,"nodeType":"288","messageId":"289","endLine":3,"endColumn":14},{"ruleId":"286","severity":1,"message":"345","line":7,"column":10,"nodeType":"288","messageId":"289","endLine":7,"endColumn":24},{"ruleId":"286","severity":1,"message":"299","line":25,"column":9,"nodeType":"288","messageId":"289","endLine":25,"endColumn":24},{"ruleId":"286","severity":1,"message":"300","line":29,"column":10,"nodeType":"288","messageId":"289","endLine":29,"endColumn":21},{"ruleId":"286","severity":1,"message":"346","line":96,"column":22,"nodeType":"288","messageId":"289","endLine":96,"endColumn":36},{"ruleId":"286","severity":1,"message":"347","line":115,"column":10,"nodeType":"288","messageId":"289","endLine":115,"endColumn":17},{"ruleId":"290","severity":1,"message":"302","line":136,"column":6,"nodeType":"292","endLine":136,"endColumn":8,"suggestions":"348"},{"ruleId":"286","severity":1,"message":"349","line":150,"column":9,"nodeType":"288","messageId":"289","endLine":150,"endColumn":21},{"ruleId":"286","severity":1,"message":"340","line":27,"column":9,"nodeType":"288","messageId":"289","endLine":27,"endColumn":20},{"ruleId":"290","severity":1,"message":"302","line":47,"column":6,"nodeType":"292","endLine":47,"endColumn":8,"suggestions":"350"},"no-unused-vars","'CategoryNavigator' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'retrieveProduct' and 'retrieveProductsByCategory'. Either include them or remove the dependency array.","ArrayExpression",["351"],"React Hook useEffect has a missing dependency: 'retrieveProductsByCategory'. Either include it or remove the dependency array.",["352"],"'icons' is defined but never used.","'FaAwes' is defined but never used.","'Link' is defined but never used.","'handleCardInput' is assigned a value but never used.","'orderStatus' is assigned a value but never used.","'payForOrder' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveUser'. Either include it or remove the dependency array.",["353"],"'totatPrice' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveMyyCart'. Either include it or remove the dependency array.",["354"],"'myOrderData' is assigned a value but never used.","'setMyOrderData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveMyCart'. Either include it or remove the dependency array.",["355"],"React Hook useEffect has a missing dependency: 'retrieveMyOrder'. Either include it or remove the dependency array.",["356"],"'AssignDeliveryToOrders' is defined but never used.","'response' is assigned a value but never used.","'setResponse' is assigned a value but never used.","'orderId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'pathOrderId.orderId'. Either include it or remove the dependency array.",["357"],"'searchOrderById' is assigned a value but never used.","'AllOrders' is defined but never used.",["358"],"React Hook useEffect has a missing dependency: 'getAllOrder'. Either include it or remove the dependency array.",["359"],["360"],"'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.",["361"],"'ProductCard' is defined but never used.","'myCartData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.state.res'. Either include it or remove the dependency array.",["362"],"React Hook useEffect has missing dependencies: 'orderList' and 'retrieveMyCart'. Either include them or remove the dependency array.",["363"],"'result' is assigned a value but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.","'bg' is defined but never used.","'FaWindows' is defined but never used.","'proceedfunc' is assigned a value but never used.",["364"],"'userEvent' is defined but never used.","React Hook useEffect has missing dependencies: 'product' and 'retrieveProduct'. Either include them or remove the dependency array.",["365"],"'ToastContainer' is defined but never used.","'setPaymentType' is assigned a value but never used.","'address' is assigned a value but never used.",["366"],"'checkBalance' is assigned a value but never used.",["367"],{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"380","fix":"382"},{"desc":"383","fix":"384"},{"desc":"378","fix":"385"},{"desc":"372","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"372","fix":"391"},{"desc":"392","fix":"393"},{"desc":"372","fix":"394"},{"desc":"372","fix":"395"},"Update the dependencies array to be: [productId, retrieveProduct, retrieveProductsByCategory]",{"range":"396","text":"397"},"Update the dependencies array to be: [categoryId, retrieveProductsByCategory]",{"range":"398","text":"399"},"Update the dependencies array to be: [retrieveUser]",{"range":"400","text":"401"},"Update the dependencies array to be: [retrieveMyyCart]",{"range":"402","text":"403"},"Update the dependencies array to be: [retrieveMyCart]",{"range":"404","text":"405"},"Update the dependencies array to be: [retrieveMyOrder]",{"range":"406","text":"407"},"Update the dependencies array to be: [pathOrderId.orderId]",{"range":"408","text":"409"},{"range":"410","text":"409"},"Update the dependencies array to be: [getAllOrder]",{"range":"411","text":"412"},{"range":"413","text":"407"},{"range":"414","text":"401"},"Update the dependencies array to be: [location.state.res, orderList]",{"range":"415","text":"416"},"Update the dependencies array to be: [orderList, retrieveMyCart]",{"range":"417","text":"418"},{"range":"419","text":"401"},"Update the dependencies array to be: [product, retrieveProduct, stock]",{"range":"420","text":"421"},{"range":"422","text":"401"},{"range":"423","text":"401"},[1430,1441],"[productId, retrieveProduct, retrieveProductsByCategory]",[1212,1224],"[categoryId, retrieveProductsByCategory]",[2987,2989],"[retrieveUser]",[4129,4131],"[retrieveMyyCart]",[777,779],"[retrieveMyCart]",[518,520],"[retrieveMyOrder]",[906,908],"[pathOrderId.orderId]",[839,841],[1692,1694],"[getAllOrder]",[569,571],[636,638],[683,694],"[location.state.res, orderList]",[1096,1098],"[orderList, retrieveMyCart]",[1118,1120],[1120,1127],"[product, retrieveProduct, stock]",[3412,3414],[1055,1057]]