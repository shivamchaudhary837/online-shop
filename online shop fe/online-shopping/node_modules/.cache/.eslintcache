[{"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\index.js":"1","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\App.js":"2","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\ContactUs.js":"3","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\AboutUs.js":"4","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\Product.jsx":"5","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\Header.jsx":"6","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\HomePage.jsx":"7","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\AddCardDetails.jsx":"8","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AddUserForm.jsx":"9","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\MyCart.jsx":"10","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\MyOrder.jsx":"11","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AllOrders.jsx":"12","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AdminLoginPage.jsx":"13","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\RegisterAdminForm.jsx":"14","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\SearchOrder.jsx":"15","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\DeliveryPersonLogin.jsx":"16","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AssignDeliveryToOrders.jsx":"17","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AddDeliveryPerson.jsx":"18","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\MyDeliveries.jsx":"19","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\MyProfile.jsx":"20","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\SuccessPage.jsx":"21","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\ProductDetail.jsx":"22","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\AddCategoryForm.jsx":"23","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\AddProductForm.jsx":"24","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\CategoryNavigator.jsx":"25","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\ProductCard.jsx":"26","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\GetAllCategories.jsx":"27","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\Carousel.jsx":"28","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\RoleNav.jsx":"29","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\AdminHeader.jsx":"30","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\HeaderUser.jsx":"31","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\NormalHeader.jsx":"32","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\DeliveryPersonHeader.jsx":"33","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\UserLoginForm.jsx":"34"},{"size":310,"mtime":1685463536359,"results":"35","hashOfConfig":"36"},{"size":3510,"mtime":1685526346818,"results":"37","hashOfConfig":"36"},{"size":1068,"mtime":1685463536374,"results":"38","hashOfConfig":"36"},{"size":2200,"mtime":1685463536359,"results":"39","hashOfConfig":"36"},{"size":6011,"mtime":1685525714847,"results":"40","hashOfConfig":"36"},{"size":1731,"mtime":1685463536374,"results":"41","hashOfConfig":"36"},{"size":2017,"mtime":1685463536374,"results":"42","hashOfConfig":"36"},{"size":6902,"mtime":1685463536359,"results":"43","hashOfConfig":"36"},{"size":6532,"mtime":1685463536374,"results":"44","hashOfConfig":"36"},{"size":4542,"mtime":1685463536374,"results":"45","hashOfConfig":"36"},{"size":4023,"mtime":1685463536374,"results":"46","hashOfConfig":"36"},{"size":4449,"mtime":1685526178403,"results":"47","hashOfConfig":"36"},{"size":3748,"mtime":1685463536374,"results":"48","hashOfConfig":"36"},{"size":4961,"mtime":1685463536374,"results":"49","hashOfConfig":"36"},{"size":9840,"mtime":1685463536374,"results":"50","hashOfConfig":"36"},{"size":3166,"mtime":1685526856547,"results":"51","hashOfConfig":"36"},{"size":8689,"mtime":1685522610788,"results":"52","hashOfConfig":"36"},{"size":4980,"mtime":1685463536374,"results":"53","hashOfConfig":"36"},{"size":4900,"mtime":1685463536374,"results":"54","hashOfConfig":"36"},{"size":6951,"mtime":1685507090749,"results":"55","hashOfConfig":"36"},{"size":1401,"mtime":1685463536374,"results":"56","hashOfConfig":"36"},{"size":6265,"mtime":1685463536374,"results":"57","hashOfConfig":"36"},{"size":2535,"mtime":1685513831658,"results":"58","hashOfConfig":"36"},{"size":5427,"mtime":1685514036415,"results":"59","hashOfConfig":"36"},{"size":452,"mtime":1685463536374,"results":"60","hashOfConfig":"36"},{"size":1885,"mtime":1685463536374,"results":"61","hashOfConfig":"36"},{"size":1294,"mtime":1685463536374,"results":"62","hashOfConfig":"36"},{"size":2121,"mtime":1685463536359,"results":"63","hashOfConfig":"36"},{"size":699,"mtime":1685463536374,"results":"64","hashOfConfig":"36"},{"size":2128,"mtime":1685529859955,"results":"65","hashOfConfig":"36"},{"size":1852,"mtime":1685529818652,"results":"66","hashOfConfig":"36"},{"size":578,"mtime":1685463536374,"results":"67","hashOfConfig":"36"},{"size":1613,"mtime":1685463536374,"results":"68","hashOfConfig":"36"},{"size":7878,"mtime":1685530621490,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"uxswr5",{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"73"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"73"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"73"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"73"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"73"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"73"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"73"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"73"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"73"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"73"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"73"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\index.js",[],[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\App.js",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\ContactUs.js",["184"],[],"import React,{Fragment} from 'react'\r\nimport {FaTwitter, FaWhatsapp,FaInstagram,FaPhone,FaMailBulk} from 'react-icons/fa'\r\nimport './contact.css'\r\nimport { icons } from 'react-icons'\r\n\r\nconst ContactUs = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"imagee\">\r\n    \r\n        {/* <img src=\"./images/about-img.jpg\" alt=\"\"/> */}\r\n        {/* <h1>Contact Us</h1> */}\r\n        </div>\r\n\r\n\r\n        <FaPhone className=\"icons Phone\"/>\r\n          <h4 className=\"phoneno\">+91 65243 98750</h4>\r\n          <h4 className=\"phoneno2\">+91 80808 79821</h4>\r\n        <FaWhatsapp className=\"icons whatsapp\"/>\r\n          <h4 className=\"whatsappno\">+91 80808 79821</h4>\r\n        <FaInstagram className=\"icons instagram\"/>\r\n          <h4 className=\"instaid\">Store_N_a_m_k_e_e_n_o</h4>\r\n        <FaMailBulk className=\"icons mailbulk\"/>\r\n          <h4 className=\"mailid\">storenamkeeno@gmail.com</h4>\r\n        <FaTwitter className=\"icons twitter\"/>\r\n          <h4 className=\"twitterid\">....................</h4>\r\n        \r\n\r\n    </Fragment>  \r\n\r\n  )\r\n}\r\n\r\nexport default ContactUs;","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\AboutUs.js",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\Product.jsx",["185","186"],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\Header.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\HomePage.jsx",["187"],[],"import Carousel from \"./Carousel\";\r\nimport GetAllCategories from \"../productComponent/GetAllCategories\";\r\nimport ProductCard from \"../productComponent/ProductCard\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst HomePage = () => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const { categoryId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const getAllProducts = async () => {\r\n      const allProducts = await retrieveAllProducts();\r\n      if (allProducts) {\r\n        setProducts(allProducts);\r\n      }\r\n    };\r\n\r\n    const getProductsByCategory = async () => {\r\n      const allProducts = await retrieveProductsByCategory();\r\n      if (allProducts) {\r\n        setProducts(allProducts);\r\n      }\r\n    };\r\n\r\n    if (categoryId == null) {\r\n      console.log(\"Category Id is null\");\r\n      getAllProducts();\r\n    } else {\r\n      console.log(\"Category Id is NOT null\");\r\n      getProductsByCategory();\r\n    }\r\n  }, [categoryId]);\r\n\r\n  const retrieveAllProducts = async () => {\r\n    const response = await axios.get(\"http://localhost:8080/api/product/all\");\r\n\r\n    return response.data;\r\n  };\r\n\r\n  const retrieveProductsByCategory = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:8080/api/product/category?categoryId=\" + categoryId\r\n    );\r\n\r\n    return response.data;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid mb-2\">\r\n      <Carousel />\r\n      <div className=\"mt-2 mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2\">\r\n            <GetAllCategories />\r\n          </div>\r\n          \r\n          <div className=\"col-md-10\">\r\n            <div className=\"row row-cols-1 row-cols-md-4 g-4\">\r\n              \r\n                {products.map((product) => {\r\n                  return <ProductCard item={product} />;\r\n                })}\r\n              </div>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\AddCardDetails.jsx",["188","189","190"],[],"import { useState,useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport {FaEdit} from 'react-icons/fa'\r\n\r\nconst AddCardDetails = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const user = JSON.parse(sessionStorage.getItem(\"active-user\"));\r\n  const priceToPay = location.state.priceToPay;\r\n\r\n  const [card, setCard] = useState({\r\n    cardName: \"\",\r\n    cardNumber: \"\",\r\n    validThrough: \"\",\r\n    cvv: \"\",\r\n  });\r\n\r\n  const handleCardInput = (e) => {\r\n    setCard({ ...card, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [orderStatus, setOrderStatus] = useState(null);\r\n\r\n  const payAndOrder = () => {\r\n    const requestData = {\r\n      userId: user.id,\r\n      priceToPay: priceToPay,\r\n      paymentType: paymentType,\r\n    };\r\n    fetch(\"http://localhost:8080/api/user/order\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(requestData),\r\n    }).then((result) => {\r\n      console.log(\"result\", result);\r\n      result.json().then((res) => {\r\n        console.log(res);\r\n\r\n        if (res === \"Order Failed\") {\r\n          setOrderStatus(\"failed\");\r\n        } else {\r\n          setOrderStatus(\"success\");\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const payForOrder = () => {\r\n    payAndOrder();\r\n    \r\n    toast.success(\"Products Ordered Sucessfully!!!\", {\r\n      position: \"top-center\",\r\n      autoClose: 1000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  \r\n    navigate(\"/user/order/payment/successpage\");\r\n  };\r\n\r\n  const [paymentType,setPaymentType] = useState(\"wallet\");\r\n\r\n  const [balance, setBalance] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Fetch user's balance\r\n    fetch(`http://localhost:8080/api/user/checkwalletbalance?userId=${user.id}`)\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        setBalance(parseInt(data));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [user.id]);\r\n\r\n  \r\n  \r\n\r\n  const [address, setAddress] = useState({\r\n    \r\n      street: \"\",\r\n      city: \"\",\r\n      pincode: \"\",\r\n    \r\n  });\r\n\r\n  useEffect(() => {\r\n    const getMyAddress = async () => {\r\n\r\n      const addressResult = await retrieveUser();\r\n\r\n      if (addressResult) {\r\n        console.log(\"my profile is present\");\r\n      }\r\n      setAddress(addressResult);\r\n    };\r\n    \r\n    getMyAddress();\r\n\r\n  }, []);\r\n\r\n \r\n  const retrieveUser = async () => {\r\n    const res = await axios.get(\r\n      \"http://localhost:8080/api/user/address/\" + user.id\r\n    );\r\n    console.log(res.data);\r\n    return res.data;\r\n  };\r\n \r\n  \r\n\r\n  const checkBalance = () => {\r\n    // Show balance in a toast\r\n    toast.info(`Wallet Balance: $${balance}`, {\r\n      position: \"top-center\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"mt-2 pt-5 d-flex aligns-items-center justify-content-center\">\r\n        <div class=\"card form-card t-5  border-color\" style={{ width: \"30rem\" , marginTop: \"7rem\"}}>\r\n    \r\n          <div className=\"card-header bg-color custom-bg-text\">\r\n            <h5 class=\"card-title text-center\">Address Confirmation</h5>\r\n          </div>\r\n          \r\n          <div class=\"card-body text-color custom-bg\">\r\n\r\n          <div className=\"form-check\">\r\n      <input\r\n        className=\"form-check-input\"\r\n        placeholder=\"CONFIRM ADDRESS\"\r\n        value={address.street+\", \"+address.city+\", \"+address.pincode}\r\n        style={{ width: \"80%\",height:\"20%\", padding: \"0.5rem\", border: \"3px solid darkgreen\", borderRadius: \"3px\" ,backgroundColor:\"lightgray\",marginLeft:\"0.1rem\"}}\r\n        \r\n\r\n      />\r\n    \r\n    <Link to={`/user/myprofile?`}><FaEdit className=\"icons edit\" style={{width:\"2.8rem\",height:\"2.8rem\",marginLeft:\"2rem\",marginTop:\"-0.1rem\", color:\"rgba(16, 65, 50, 0.87)\"}}/></Link>  \r\n    \r\n    {/* <button\r\n  className=\"btn btn-primary btn-sm ml-auto\"\r\n  onClick={() => navigate(\"/edit-address\")}\r\n  style={{ width: \"20%\",height:\"20%\", padding: \"0.5rem\", border: \"1px solid gray\", borderRadius: \"3px\",marginTop:\"0.3rem\",marginLeft:\"1rem\" }}\r\n\r\n>\r\n  Edit\r\n</button> */}\r\n\r\n      \r\n      <label className=\"form-check-label\" htmlFor=\"CONFORM ADDRESS\">\r\n       \r\n      </label>\r\n    </div>\r\n\r\n          <div className=\"mb-3\" style={{marginTop:\"2rem\"}}>\r\n  <label htmlFor=\"paymentType\" className=\"form-label\" style={{marginLeft:\"1.6rem\"}}>\r\n    <b>Payment Type</b>\r\n  </label>\r\n  <div>\r\n    <div className=\"form-check\" style={{marginLeft:\"2.5rem\"}}>\r\n      <input\r\n        className=\"form-check-input\"\r\n        type=\"radio\"\r\n        name=\"paymentType\"\r\n        id=\"cod\"\r\n        value=\"cod\"\r\n        checked={paymentType === \"cod\"}\r\n        onChange={(e) => setPaymentType(e.target.value)}\r\n        \r\n      />\r\n      <label className=\"form-check-label\" htmlFor=\"cod\">\r\n        Cash on Delivery\r\n      </label>\r\n    </div>\r\n    <div className=\"form-check\" style={{marginLeft:\"2.5rem\"}}>\r\n      <input\r\n        className=\"form-check-input\"\r\n        type=\"radio\"\r\n        name=\"paymentType\"\r\n        id=\"wallet\"\r\n        value=\"wallet\"\r\n        checked={paymentType === \"wallet\"}\r\n        onChange={(e) => setPaymentType(e.target.value)}\r\n      />\r\n      \r\n      <label className=\"form-check-label\" htmlFor=\"wallet\">\r\n        Wallet Pay\r\n      </label>\r\n    </div>\r\n    \r\n    \r\n    \r\n  </div>\r\n</div>\r\n<div className=\"xyz\" style={{display: \"flex\"}}>  \r\n{paymentType === \"wallet\" && (\r\n            <div className=\"mb-3\"\r\n              style={{display:\"inline-block\"}}\r\n              >\r\n              \r\n              \r\n              <button className=\"btn custom-bg-text bg-color\" style={{marginLeft:\"1.6rem\",marginTop:\"1rem\",width:\"10rem\"}}  onClick={checkBalance}>\r\n                Check Balance\r\n              </button>\r\n            </div>\r\n          )}\r\n          \r\n             <form onSubmit={payForOrder}>\r\n            \r\n              \r\n              \r\n              <input \r\n                type=\"submit\"\r\n                class=\"btn custom-bg-text bg-color\"\r\n                value={paymentType ===\"wallet\" ? \"PAY  IT\" : \"Proceed\"}\r\n                \r\n                style={{display: \"flex\", flexDirection: \"row\" ,marginTop:\"1.05rem\",\r\n                marginLeft:\"5.4rem\",width:\"10rem\",paddingInline:\"3.2rem\"}}\r\n              />\r\n               \r\n              <ToastContainer />\r\n            </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default AddCardDetails;","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AddUserForm.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\MyCart.jsx",["191"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst MyCart = () => {\r\n  let navigate = useNavigate();\r\n  const user = JSON.parse(sessionStorage.getItem(\"active-user\"));\r\n  const [totatPrice, setTotalPrice] = useState(\"\");\r\n  const [myCartData, setMyCartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getMyCart = async () => {\r\n      const myCart = await retrieveMyCart();\r\n      if (myCart) {\r\n        console.log(\"cart data is present :)\");\r\n        console.log(myCart.totalCartPrice);\r\n        console.log(myCart.cartData);\r\n        setTotalPrice(myCart.totalCartPrice);\r\n        setMyCartData(myCart.cartData);\r\n      }\r\n    };\r\n\r\n    getMyCart();\r\n  }, []);\r\n\r\n  const retrieveMyCart = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:8080/api/user/mycart?userId=\" + user.id\r\n    );\r\n    console.log(response.data);\r\n    return response.data;\r\n  };\r\n\r\n  const deleteProductFromCart = (cartId, e) => {\r\n    const response = axios.get(\r\n      \"http://localhost:8080/api/user/mycart/remove?cartId=\" + cartId\r\n    );\r\n\r\n    console.log(response);\r\n  };\r\n\r\n  const checkout = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"CHECKOUT PAGE REQUEST\");\r\n    navigate(\"/user/order/payment\", { state: { priceToPay: totatPrice } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      <div\r\n        className=\"card form-card ms-2 me-2 mb-5 card-color border-color\"\r\n        style={{\r\n          height: \"45rem\",\r\n        }}\r\n      >\r\n        <div className=\"card-header text-center card-color custom-bg-text\">\r\n          <h2 style={{color:\"black\"}}>My Cart</h2>\r\n        </div>\r\n        <div\r\n          className=\"card-body\"\r\n          style={{\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover bg-color-text text-center\">\r\n              <thead className=\"custom-bg table-bordered border-color\">\r\n                <tr>\r\n                  <th scope=\"col\">Product</th>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Quantity</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-color\">\r\n                {myCartData.map((cartData) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>\r\n                        <img\r\n                          src={\r\n                            \"http://localhost:8080/api/product/\" +\r\n                            cartData.productImage\r\n                          }\r\n                          class=\"img-fluid\"\r\n                          alt=\"product_pic\"\r\n                          style={{\r\n                            maxWidth: \"90px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <b>{cartData.productName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{cartData.productDescription}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{cartData.quantity}</b>\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn bg-color custom-bg-text btn-sm\"\r\n                          onClick={() => deleteProductFromCart(cartData.cartId)}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-footer card-color\">\r\n          <div className=\"float-right\">\r\n            <div\r\n              className=\"text-color me-2\"\r\n              style={{\r\n                textAlign: \"right\",\r\n              }}\r\n            >\r\n              <h5>Total Price: &#8377; {totatPrice}/-</h5>\r\n            </div>\r\n\r\n            <div className=\"float-end me-2\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn bg-color custom-bg-text mb-3\"\r\n                onClick={checkout}\r\n              >\r\n                Checkout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyCart;\r\n","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\MyOrder.jsx",["192"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nconst MyOrder = () => {\r\n  const user = JSON.parse(sessionStorage.getItem(\"active-user\"));\r\n  \r\n  const [myOrderData, setMyOrderData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getMyOrder = async () => {\r\n      const myOrder = await retrieveMyOrder();\r\n      if (myOrder) {\r\n        console.log(\"my order data is present :)\");\r\n\r\n        setMyOrderData(myOrder);\r\n      }\r\n    };\r\n\r\n    getMyOrder();\r\n  }, []);\r\n\r\n  const retrieveMyOrder = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:8080/api/user/myorder?userId=\" + user.id\r\n    );\r\n    console.log(response.data);\r\n    return response.data;\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      <div\r\n        className=\"card form-card ms-2 me-2 mb-5 card-color\"\r\n        style={{\r\n          height: \"45rem\",\r\n        }}\r\n      >\r\n        <div className=\"card-header text-center card-color bg-color-text\">\r\n          <h2>My Orders</h2>\r\n        </div>\r\n        <div\r\n          className=\"card-body\"\r\n          style={{\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover bg-color-text text-center\">\r\n              <thead className=\"custom-bg table-bordered border-color\">\r\n                <tr>\r\n                  <th scope=\"col\">Order Id</th>\r\n                  <th scope=\"col\">Product</th>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Quantity</th>\r\n                  <th scope=\"col\">Total Price</th>\r\n                  <th scope=\"col\">Order Date</th>\r\n                  <th scope=\"col\">Delivery Date</th>\r\n                  <th scope=\"col\">Delivery Status</th>\r\n                  <th scope=\"col\">Delivery Person</th>\r\n                  <th scope=\"col\">Delivery Mobile No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-color\">\r\n                {myOrderData.map((orderData) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>\r\n                        <b>{orderData.orderId}</b>\r\n                      </td>\r\n                      <td>\r\n                        <img\r\n                          src={\r\n                            \"http://localhost:8080/api/product/\" +\r\n                            orderData.productImage\r\n                          }\r\n                          class=\"img-fluid\"\r\n                          alt=\"product_pic\"\r\n                          style={{\r\n                            maxWidth: \"90px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.productName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.productDescription}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.quantity}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.totalPrice}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.orderDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryStatus}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonContact}</b>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyOrder;\r\n","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AllOrders.jsx",["193"],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AdminLoginPage.jsx",["194","195"],[],"import { useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AdminLoginPage = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const [loginRequest, setLoginRequest] = useState({\r\n    emailId: \"\",\r\n    password: \"\",\r\n    role:\"Admin\"\r\n  });\r\n\r\n  const [response, setResponse] = useState({});\r\n\r\n  const handleUserInput = (e) => {\r\n    setLoginRequest({ ...loginRequest, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const loginAction = (e) => {\r\n    fetch(\"http://localhost:8080/api/user/admin/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(loginRequest),\r\n    }).then((result) => {\r\n      console.log(\"result\", result);\r\n      result.json().then((res) => {\r\n        sessionStorage.setItem(\"active-admin\", JSON.stringify(res));\r\n        console.log(\"Working fine:)\");\r\n\r\n        toast.success(\"logged in successfully!!!\", {\r\n          position: \"top-center\",\r\n          autoClose: 1000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        navigate(\"/home\");\r\n        window.location.reload(true);\r\n      }).catch((error) => {\r\n        console.error(error);\r\n        // Handle the error here, such as displaying an error message to the user\r\n        toast.error(\"Wrong Email Id or Password,Try Again\", {\r\n          position: \"top-center\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      });\r\n    });\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mt-2 d-flex aligns-items-center justify-content-center\">\r\n        <div className=\"card vertical-down custom-bg form-card border-color\" style={{ width: \"35rem\" }}>\r\n          <div className=\"card-header custom-bg  text-center bg-color-text\">\r\n            <h4 className=\"card-title\">Admin Login</h4>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"emailId\" class=\"form-label bg-color-text\">\r\n                  Email Id\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"emailId\"\r\n                  name=\"emailId\"\r\n                  placeholder=\"Email Id\"\r\n                  onChange={handleUserInput}\r\n                  value={loginRequest.emailId}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"password\" className=\"form-label bg-color-text\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={handleUserInput}\r\n                  value={loginRequest.password}\r\n                  autoComplete=\"on\"\r\n                />\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn bg-color custom-bg-text\"\r\n                onClick={loginAction}\r\n              >\r\n                Login\r\n              </button>\r\n              <ToastContainer />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLoginPage;\r\n","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\RegisterAdminForm.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\SearchOrder.jsx",["196"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst SearchOrder = () => {\r\n  const [allOrderData, setAllOrderData] = useState([]);\r\n  const [orderId, setOrderId] = useState(\"\");\r\n\r\n  const deliveryStatus = [\"Delivered\", \"On the Way\", \"Processing\"];\r\n  const deliveryTime = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  const [orderDeliveryStatus, setOrderDeliveryStatus] = useState({\r\n    orderId: \"\",\r\n    deliveryStatus: \"\",\r\n    deliveryTime: \"\",\r\n    deliveryDate: \"\",\r\n  });\r\n\r\n  const handleOrderDelivery = (e) => {\r\n    setOrderDeliveryStatus({\r\n      ...orderDeliveryStatus,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const getAllOrder = async () => {\r\n    const allOrder = await retrieveAllOrder();\r\n    if (allOrder) {\r\n      setAllOrderData(allOrder);\r\n    }\r\n  };\r\n\r\n  const retrieveAllOrder = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:8080/api/user/admin/showorder?orderId=\" + orderId\r\n    );\r\n    console.log(response.data);\r\n    return response.data;\r\n  };\r\n\r\n  const searchOrderById = (e) => {\r\n    getAllOrder();\r\n    setOrderId(\"\");\r\n    e.preventDefault();\r\n  };\r\n\r\n  const updateDeliveryStatus = (e) => {\r\n    console.log(\"CLICKED DELIVERY STATUS UPDATED\");\r\n    fetch(\"http://localhost:8080/api/user/admin/order/deliveryStatus/update\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(orderDeliveryStatus),\r\n    }).then((result) => {\r\n      console.log(\"result\", result);\r\n      result.json().then((res) => {\r\n        console.log(\"response\", res);\r\n        setAllOrderData({\r\n          orderId: \"\",\r\n          deliveryStatus: \"\",\r\n          deliveryTime: \"\",\r\n          deliveryDate: \"\",\r\n        });\r\n\r\n        setAllOrderData(res);\r\n      });\r\n    });\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"card form-card mt-1 ms-2 me-2 mb-2 custom-bg\"\r\n        style={{\r\n          height: \"35rem\",\r\n        }}\r\n      >\r\n        <div className=\"card-header text-center bg-color custom-bg-text\">\r\n          <h4>Searh Customer Orders</h4>\r\n        </div>\r\n        <div\r\n          className=\"card-body\"\r\n          style={{\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          <form class=\"row g-3\">\r\n            <div class=\"col-auto\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"inputPassword2\"\r\n                placeholder=\"Enter Order Id...\"\r\n                onChange={(e) => setOrderId(e.target.value)}\r\n                value={orderId}\r\n              />\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <button\r\n                type=\"submit\"\r\n                class=\"btn bg-color custom-bg-text mb-3\"\r\n                onClick={searchOrderById}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover custom-bg-text text-center\">\r\n              <thead className=\"bg-color table-bordered border-color\">\r\n                <tr>\r\n                  <th scope=\"col\">Order Id</th>\r\n                  <th scope=\"col\">Product</th>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Quantity</th>\r\n                  <th scope=\"col\">Total Price</th>\r\n                  <th scope=\"col\">Customer Name</th>\r\n                  <th scope=\"col\">Street</th>\r\n                  <th scope=\"col\">City</th>\r\n                  <th scope=\"col\">Pin code</th>\r\n                  <th scope=\"col\">Mobile No.</th>\r\n                  <th scope=\"col\">Order Date</th>\r\n                  <th scope=\"col\">Delivery Date</th>\r\n                  <th scope=\"col\">Delivery Status</th>\r\n                  <th scope=\"col\">Delivery Person</th>\r\n                  <th scope=\"col\">Delivery Mobile No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-color\">\r\n                {allOrderData.map((orderData) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>\r\n                        <b>{orderData.orderId}</b>\r\n                      </td>\r\n                      <td>\r\n                        <img\r\n                          src={\r\n                            \"http://localhost:8080/api/product/\" +\r\n                            orderData.productImage\r\n                          }\r\n                          class=\"img-fluid\"\r\n                          alt=\"product_pic\"\r\n                          style={{\r\n                            maxWidth: \"90px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.productName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.productDescription}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.quantity}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.totalPrice}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.userName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.address.street}</b>\r\n                      </td>\r\n\r\n                      <td>\r\n                        <b>{orderData.address.city}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.address.pincode}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.userPhone}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.orderDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryStatus}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonContact}</b>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <div className=\"card form-card ms-2 me-2 mb-2 custom-bg\">\r\n          <div className=\"card-header text-center bg-color custom-bg-text\">\r\n            <h4>Update Delivery Status</h4>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form class=\"row g-3\">\r\n              <div class=\"col-auto\">\r\n                <label className=\"text-color\">\r\n                  <b>Order Id</b>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"inputPassword2\"\r\n                  placeholder=\"Enter Order Id...\"\r\n                  name=\"orderId\"\r\n                  onChange={handleOrderDelivery}\r\n                  value={handleOrderDelivery.orderId}\r\n                />\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <label className=\"text-color\">\r\n                  <b>Select Delivery Date</b>\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  class=\"form-control\"\r\n                  id=\"inputPassword2\"\r\n                  name=\"deliveryDate\"\r\n                  placeholder=\"dd-mm-yyyy\"\r\n                  min=\"1997-01-01\"\r\n                  max=\"2030-12-31\"\r\n                  value={handleOrderDelivery.deliveryDate}\r\n                  onChange={handleOrderDelivery}\r\n                />\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <label className=\"text-color\">\r\n                  <b>Delivery Time</b>\r\n                </label>\r\n\r\n                <select\r\n                  name=\"deliveryTime\"\r\n                  value={handleOrderDelivery.deliveryTime}\r\n                  onChange={handleOrderDelivery}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"\">Select Delivery Time</option>\r\n\r\n                  {deliveryTime.map((time) => {\r\n                    return <option value={time}> {time} </option>;\r\n                  })}\r\n                </select>\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <label className=\"text-color\">\r\n                  <b>Delivery Status</b>\r\n                </label>\r\n                <select\r\n                  name=\"deliveryStatus\"\r\n                  value={handleOrderDelivery.deliveryStatus}\r\n                  onChange={handleOrderDelivery}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"\">Select Delivery Status</option>\r\n\r\n                  {deliveryStatus.map((status) => {\r\n                    return <option value={status}> {status} </option>;\r\n                  })}\r\n                </select>\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn bg-color custom-bg-text mt-4\"\r\n                  onClick={updateDeliveryStatus}\r\n                >\r\n                  Update Delivery Status\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchOrder;\r\n","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\DeliveryPersonLogin.jsx",["197","198","199"],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AssignDeliveryToOrders.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\AddDeliveryPerson.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\MyDeliveries.jsx",["200"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nconst MyDeliveries = () => {\r\n  const delivery = JSON.parse(sessionStorage.getItem(\"active-delivery\"));\r\n  const [myOrderData, setMyOrderData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getMyOrder = async () => {\r\n      const myOrder = await retrieveMyOrder();\r\n      if (myOrder) {\r\n        console.log(\"my order data is present :)\");\r\n\r\n        setMyOrderData(myOrder);\r\n      }\r\n    };\r\n\r\n    getMyOrder();\r\n  }, []);\r\n\r\n  const retrieveMyOrder = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:8080/api/user/delivery/myorder?deliveryPersonId=\" +\r\n        delivery.id\r\n    );\r\n    console.log(response.data);\r\n    return response.data;\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      <div\r\n        className=\"card form-card ms-2 me-2 mb-5 custom-bg border-color\"\r\n        style={{\r\n          height: \"45rem\",\r\n        }}\r\n      >\r\n        <div className=\"card-header text-center bg-color custom-bg-text\">\r\n          <h2>My Deliveries</h2>\r\n        </div>\r\n        <div\r\n          className=\"card-body\"\r\n          style={{\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover custom-bg-text text-center\">\r\n              <thead className=\"bg-color table-bordered border-color\">\r\n                <tr>\r\n                  <th scope=\"col\">Order Id</th>\r\n                  <th scope=\"col\">Product</th>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Quantity</th>\r\n                  <th scope=\"col\">Total Price</th>\r\n                  <th scope=\"col\">Customer Name</th>\r\n                  <th scope=\"col\">Street</th>\r\n                  <th scope=\"col\">City</th>\r\n                  <th scope=\"col\">Pin code</th>\r\n                  <th scope=\"col\">Mobile No.</th>\r\n                  <th scope=\"col\">Order Date</th>\r\n                  <th scope=\"col\">Delivery Date</th>\r\n                  <th scope=\"col\">Delivery Status</th>\r\n                  <th scope=\"col\">Delivery Person</th>\r\n                  <th scope=\"col\">Delivery Mobile No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-color\">\r\n                {myOrderData.map((orderData) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>\r\n                        <b>{orderData.orderId}</b>\r\n                      </td>\r\n                      <td>\r\n                        <img\r\n                          src={\r\n                            \"http://localhost:8080/api/product/\" +\r\n                            orderData.productImage\r\n                          }\r\n                          class=\"img-fluid\"\r\n                          alt=\"product_pic\"\r\n                          style={{\r\n                            maxWidth: \"90px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.productName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.productDescription}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.quantity}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.totalPrice}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.userName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.address.street}</b>\r\n                      </td>\r\n\r\n                      <td>\r\n                        <b>{orderData.address.city}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.address.pincode}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.userPhone}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.orderDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryStatus}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonContact}</b>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyDeliveries;\r\n","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\MyProfile.jsx",["201"],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\SuccessPage.jsx",["202","203"],[],"import React from 'react'\r\n// import { Link } from \"react-router-dom\";\r\nimport ProductCard from \"../productComponent/ProductCard\";\r\nimport {FaCheckCircle} from 'react-icons/fa'\r\nimport { icons } from 'react-icons'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Successpage = () => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"main-container\">\r\n       <div className=\"congrats\" style={{fontFamily:\"'Kalam', cursive\"}}>\r\n       <h1 className=\"enlightment\" style={{marginLeft:\"44rem\",marginTop:\"6rem\"}}>Hurry!!</h1>\r\n       <h1 className=\"confirmation\" style={{marginLeft:\"32rem\",marginTop:\"1rem\"}}>Your Order has been Placed</h1>\r\n\r\n       {/* style={{fontSize:80}} */}\r\n       </div>\r\n       \r\n      <FaCheckCircle className=\"check-icon\" style={{marginLeft:\"42.6rem\",marginTop:\"2.4rem\",width:\"11rem\",height:\"11rem\",color:\"green\"}}  /> \r\n\r\n      <div className=\"thanks\" style={{marginTop:\"3rem\",fontFamily:\"'Kalam', cursive\",marginLeft:\"34.5rem\"}}>\r\n        <h2>Thank You for Your Purchase!!</h2>\r\n      </div>\r\n\r\n       <button\r\n  className=\"btn \"\r\n  onClick={() => navigate(\"/\")}\r\n  style={{ width: \"15%\",height:\"20%\", padding: \"0.5rem\", border: \"1px solid gray\", borderRadius: \"3px\",marginTop:\"1rem\",marginLeft:\"41.1rem\" , backgroundColor:\"#ec5610\",fontStyle:\"bold\"}}\r\n\r\n>\r\n  Continue Shopping\r\n</button>\r\n       \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Successpage;","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\ProductDetail.jsx",["204","205","206","207"],[],"// import GetAllCategories from \"../productComponent/GetAllCategories\";\r\n// import CategoryNavigator from \"../productComponent/CategoryNavigator\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ProductCard from \"../productComponent/ProductCard\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport productimg from \"../images/45ad21d9b9e8488da05b821975ef0ad4.webp\";\r\n\r\nconst ProductDetail = () => {\r\n  const { productId, categoryId } = useParams();\r\n\r\n  let user = JSON.parse(sessionStorage.getItem(\"active-user\"));\r\n \r\n\r\n  const [quantity, setQuantity] = useState(\"\");\r\n\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const [product, setProduct] = useState({\r\n    id: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    quantity: \"\",\r\n    price: \"\",\r\n    imageName: \"\",\r\n    category: { id: \"\", title: \"\" },\r\n  });\r\n\r\n  \r\n  const retrieveProduct = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:8080/api/product/id?productId=\" + productId\r\n    );\r\n\r\n    return response.data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getProduct = async () => {\r\n      const retrievedProduct = await retrieveProduct();\r\n\r\n      setProduct(retrievedProduct);\r\n    };\r\n\r\n\r\n    getProduct();\r\n    // getProductsByCategory();\r\n  }, [productId]);\r\n\r\n  \r\n\r\n  const saveProductToCart = (userId) => {\r\n    fetch(\"http://localhost:8080/api/user/cart/add\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        quantity: quantity,\r\n        userId: userId,\r\n        productId: productId,\r\n      }),\r\n    }).then((result) => {\r\n      console.log(\"result\", result);\r\n\r\n      toast.success(\"Products added to Cart Successfully!!!\", {\r\n        position: \"top-center\",\r\n        autoClose: 1000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n\r\n      result.json().then((res) => {\r\n        console.log(\"response\", res);\r\n      });\r\n    });\r\n  };\r\n\r\n  const addToCart = (e) => {\r\n    if (user == null) {\r\n      alert(\"Please login to buy the products!!!\");\r\n      e.preventDefault();\r\n    } else {\r\n      saveProductToCart(user.id);\r\n      setQuantity(\"\");\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  const [productImage, setProductImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const importProductImage = async () => {\r\n      if (product.imageName) {\r\n        try {\r\n          const importedImage = await import(`../images/${product.imageName}`);\r\n          setProductImage(importedImage.default);\r\n        } catch (error) {\r\n          console.error(\"Error importing product image:\", error);\r\n        }\r\n      }\r\n    };\r\n\r\n    importProductImage();\r\n  }, [product.imageName]);\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div class=\"row\" style={{marginTop:\"8rem\",marginLeft:\"15rem\"}}>\r\n        {/* <div class=\"col-sm-2 mt-2\">\r\n          <GetAllCategories />\r\n        </div> */}\r\n        <div class=\"col-sm-3 mt-2 admin\">\r\n          <div class=\"card form-card border-color custom-bg\">\r\n            <img\r\n              src={productImage}\r\n              \r\n              style={{\r\n                maxHeight: \"500px\",\r\n                maxWidth: \"100%\",\r\n                width: \"auto\",\r\n              }}\r\n              class=\"card-img-top rounded mx-auto d-block m-2\"\r\n              alt={productImage}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-7 mt-2\" style={{width:\"40rem\" , height:\"18rem\"}}>\r\n          <div class=\"card form-card border-color custom-bg\">\r\n            <div class=\"card-header bg-color\">\r\n              <div className=\"d-flex justify-content-between\">\r\n                <h1 className=\"custom-bg-text\">{product.title}</h1>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"card-body text-left text-color\">\r\n              <div class=\"text-left mt-3\">\r\n                <h3>Description :</h3>\r\n              </div>\r\n              <h4 class=\"card-text\" style={{marginLeft:\"1rem\",marginTop:\"1rem\"}}>{product.description}</h4>\r\n            </div>\r\n\r\n            <div class=\"card-footer custom-bg\">\r\n              <div className=\"text-center text-color\"  style={{marginLeft:\"28rem\"}}>\r\n                <p>\r\n                  <span>\r\n                    <h4>Price : &#8377;{product.price}</h4>\r\n                  </span>\r\n                </p>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between\">\r\n                <div>\r\n                  <form class=\"row g-3\" onSubmit={addToCart}>\r\n                    <div class=\"col-auto\">\r\n                      {/* <input\r\n                        type=\"number\"\r\n                        class=\"form-control\"\r\n                        id=\"addToCart\"\r\n                        placeholder=\"Enter Quantity...\"\r\n                        onChange={(e) => setQuantity(e.target.value)}\r\n                        value={quantity}\r\n                        required\r\n                      /> */}\r\n                    </div>\r\n                    <div class=\"col-auto\">\r\n                      <input\r\n                        type=\"submit\"\r\n                        className=\"btn bg-color custom-bg-text mb-3\"\r\n                        value=\"Add to Cart\"\r\n                      />\r\n                      <ToastContainer />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n\r\n                <p class=\"ml-2 text-color\"  style={{marginRight:\"3rem\"}}>\r\n                  <b>Stock : {product.quantity}</b>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col-sm-2\"></div>\r\n\r\n        <div className=\"col-sm-10\">\r\n          <h2>Related Products:</h2>\r\n          <div className=\"row row-cols-1 row-cols-md-4 g-4\">\r\n              \r\n                {products.map((product) => {\r\n                  return <ProductCard item={product} />;\r\n                })}\r\n              </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetail;","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\AddCategoryForm.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\AddProductForm.jsx",["208"],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\CategoryNavigator.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\ProductCard.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\productComponent\\GetAllCategories.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\Carousel.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\RoleNav.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\AdminHeader.jsx",["209"],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\HeaderUser.jsx",["210"],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\NormalHeader.jsx",[],[],"C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\pages\\DeliveryPersonHeader.jsx",["211"],[],"import { Link, useNavigate } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst DeliveryPersonHeader = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const user = JSON.parse(sessionStorage.getItem(\"active-delivery\"));\r\n  console.log(user);\r\n\r\n  const userLogout = () => {\r\n    toast.success(\"logged out!!!\", {\r\n      position: \"top-center\",\r\n      autoClose: 1000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n    sessionStorage.removeItem(\"active-delivery\");\r\n    window.location.reload(true);\r\n  };\r\n\r\n  return (\r\n    <ul class=\"navbar-nav ms-auto mb-2 mb-lg-0 me-5 text-color\">\r\n      <li class=\"nav-item\">\r\n        <Link\r\n          to=\"/user/delivery/myorders\"\r\n          class=\"nav-link active\"\r\n          aria-current=\"page\"\r\n        >\r\n          <b className=\"text-color\">My Deliveries</b>\r\n        </Link>\r\n      </li>\r\n\r\n      <li class=\"nav-item\">\r\n        <Link\r\n          to=\"/user/admin/searchOrder\"\r\n          class=\"nav-link active\"\r\n          aria-current=\"page\"\r\n        >\r\n          <b className=\"text-color\">Update Order Delivery</b>\r\n        </Link>\r\n      </li>\r\n\r\n      <li class=\"nav-item\">\r\n        <Link\r\n          to=\"\"\r\n          class=\"nav-link active\"\r\n          aria-current=\"page\"\r\n          onClick={userLogout}\r\n        >\r\n          <b className=\"text-color\">Logout</b>\r\n        </Link>\r\n        <ToastContainer />\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default DeliveryPersonHeader;\r\n","C:\\Users\\shivamc\\Downloads\\online-shop\\online shop fe\\online-shopping\\src\\userComponent\\UserLoginForm.jsx",["212","213"],[],{"ruleId":"214","severity":1,"message":"215","line":4,"column":10,"nodeType":"216","messageId":"217","endLine":4,"endColumn":15},{"ruleId":"214","severity":1,"message":"218","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":25},{"ruleId":"219","severity":1,"message":"220","line":52,"column":6,"nodeType":"221","endLine":52,"endColumn":17,"suggestions":"222"},{"ruleId":"219","severity":1,"message":"223","line":35,"column":6,"nodeType":"221","endLine":35,"endColumn":18,"suggestions":"224"},{"ruleId":"214","severity":1,"message":"225","line":21,"column":9,"nodeType":"216","messageId":"217","endLine":21,"endColumn":24},{"ruleId":"214","severity":1,"message":"226","line":25,"column":10,"nodeType":"216","messageId":"217","endLine":25,"endColumn":21},{"ruleId":"219","severity":1,"message":"227","line":110,"column":6,"nodeType":"221","endLine":110,"endColumn":8,"suggestions":"228"},{"ruleId":"219","severity":1,"message":"229","line":25,"column":6,"nodeType":"221","endLine":25,"endColumn":8,"suggestions":"230"},{"ruleId":"219","severity":1,"message":"231","line":21,"column":6,"nodeType":"221","endLine":21,"endColumn":8,"suggestions":"232"},{"ruleId":"214","severity":1,"message":"233","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":30},{"ruleId":"214","severity":1,"message":"234","line":15,"column":10,"nodeType":"216","messageId":"217","endLine":15,"endColumn":18},{"ruleId":"214","severity":1,"message":"235","line":15,"column":20,"nodeType":"216","messageId":"217","endLine":15,"endColumn":31},{"ruleId":"214","severity":1,"message":"236","line":1,"column":20,"nodeType":"216","messageId":"217","endLine":1,"endColumn":29},{"ruleId":"214","severity":1,"message":"237","line":4,"column":10,"nodeType":"216","messageId":"217","endLine":4,"endColumn":21},{"ruleId":"214","severity":1,"message":"234","line":13,"column":10,"nodeType":"216","messageId":"217","endLine":13,"endColumn":18},{"ruleId":"214","severity":1,"message":"235","line":13,"column":20,"nodeType":"216","messageId":"217","endLine":13,"endColumn":31},{"ruleId":"219","severity":1,"message":"231","line":20,"column":6,"nodeType":"221","endLine":20,"endColumn":8,"suggestions":"238"},{"ruleId":"219","severity":1,"message":"227","line":36,"column":6,"nodeType":"221","endLine":36,"endColumn":8,"suggestions":"239"},{"ruleId":"214","severity":1,"message":"240","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":19},{"ruleId":"214","severity":1,"message":"215","line":5,"column":10,"nodeType":"216","messageId":"217","endLine":5,"endColumn":15},{"ruleId":"214","severity":1,"message":"241","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":18},{"ruleId":"214","severity":1,"message":"242","line":11,"column":22,"nodeType":"216","messageId":"217","endLine":11,"endColumn":32},{"ruleId":"214","severity":1,"message":"243","line":18,"column":20,"nodeType":"216","messageId":"217","endLine":18,"endColumn":31},{"ruleId":"219","severity":1,"message":"244","line":49,"column":6,"nodeType":"221","endLine":49,"endColumn":17,"suggestions":"245"},{"ruleId":"214","severity":1,"message":"246","line":48,"column":13,"nodeType":"216","messageId":"217","endLine":48,"endColumn":19},{"ruleId":"214","severity":1,"message":"247","line":6,"column":7,"nodeType":"216","messageId":"217","endLine":6,"endColumn":15},{"ruleId":"214","severity":1,"message":"247","line":6,"column":7,"nodeType":"216","messageId":"217","endLine":6,"endColumn":15},{"ruleId":"214","severity":1,"message":"247","line":6,"column":7,"nodeType":"216","messageId":"217","endLine":6,"endColumn":15},{"ruleId":"214","severity":1,"message":"248","line":4,"column":10,"nodeType":"216","messageId":"217","endLine":4,"endColumn":14},{"ruleId":"214","severity":1,"message":"249","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":10},"no-unused-vars","'icons' is defined but never used.","Identifier","unusedVar","'CategoryNavigator' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'retrieveProduct' and 'retrieveProductsByCategory'. Either include them or remove the dependency array.","ArrayExpression",["250"],"React Hook useEffect has a missing dependency: 'retrieveProductsByCategory'. Either include it or remove the dependency array.",["251"],"'handleCardInput' is assigned a value but never used.","'orderStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveUser'. Either include it or remove the dependency array.",["252"],"React Hook useEffect has a missing dependency: 'retrieveMyCart'. Either include it or remove the dependency array.",["253"],"React Hook useEffect has a missing dependency: 'retrieveMyOrder'. Either include it or remove the dependency array.",["254"],"'AssignDeliveryToOrders' is defined but never used.","'response' is assigned a value but never used.","'setResponse' is assigned a value but never used.","'useEffect' is defined but never used.","'useNavigate' is defined but never used.",["255"],["256"],"'ProductCard' is defined but never used.","'productimg' is defined but never used.","'categoryId' is assigned a value but never used.","'setProducts' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveProduct'. Either include it or remove the dependency array.",["257"],"'result' is assigned a value but never used.","'navigate' is assigned a value but never used.","'Link' is defined but never used.","'bg' is defined but never used.",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"266","fix":"268"},{"desc":"262","fix":"269"},{"desc":"270","fix":"271"},"Update the dependencies array to be: [productId, retrieveProduct, retrieveProductsByCategory]",{"range":"272","text":"273"},"Update the dependencies array to be: [categoryId, retrieveProductsByCategory]",{"range":"274","text":"275"},"Update the dependencies array to be: [retrieveUser]",{"range":"276","text":"277"},"Update the dependencies array to be: [retrieveMyCart]",{"range":"278","text":"279"},"Update the dependencies array to be: [retrieveMyOrder]",{"range":"280","text":"281"},{"range":"282","text":"281"},{"range":"283","text":"277"},"Update the dependencies array to be: [productId, retrieveProduct]",{"range":"284","text":"285"},[1430,1441],"[productId, retrieveProduct, retrieveProductsByCategory]",[1002,1014],"[categoryId, retrieveProductsByCategory]",[2694,2696],"[retrieveUser]",[773,775],"[retrieveMyCart]",[518,520],"[retrieveMyOrder]",[527,529],[706,708],[1337,1348],"[productId, retrieveProduct]"]